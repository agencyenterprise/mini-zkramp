import {
  require_react
} from "./chunk-6I4Q4HDT.js";
import {
  __toESM
} from "./chunk-BQWMX7FD.js";

// node_modules/konsta/react/esm/components/App.js
var import_react5 = __toESM(require_react(), 1);

// node_modules/konsta/react/esm/shared/KonstaProvider.js
var import_react4 = __toESM(require_react(), 1);

// node_modules/konsta/react/esm/shared/KonstaContext.js
var import_react = __toESM(require_react(), 1);
var KonstaContext = import_react.default.createContext({
  theme: "material",
  dark: true,
  touchRipple: true
});

// node_modules/konsta/react/esm/shared/use-auto-theme.js
var import_react3 = __toESM(require_react(), 1);

// node_modules/konsta/react/esm/shared/use-isomorphic-layout-effect.js
var import_react2 = __toESM(require_react(), 1);
function useIsomorphicLayoutEffect(callback, deps) {
  if (typeof window === "undefined")
    return (0, import_react2.useEffect)(callback, deps);
  return (0, import_react2.useLayoutEffect)(callback, deps);
}

// node_modules/konsta/react/esm/shared/use-auto-theme.js
var useAutoTheme = function(theme, autoThemeDetection) {
  if (autoThemeDetection === void 0) {
    autoThemeDetection = true;
  }
  const [themeState, setThemeState] = (0, import_react3.useState)(theme);
  useIsomorphicLayoutEffect(() => {
    if (!autoThemeDetection)
      return;
    if (theme === "ios" || theme === "material") {
      if (themeState !== theme)
        setThemeState(theme);
    } else if (themeState === "parent" && typeof window !== "undefined" && typeof document !== "undefined") {
      const htmlEl = document.documentElement;
      if (htmlEl) {
        if (htmlEl.classList.contains("ios")) {
          setThemeState("ios");
        } else if (htmlEl.classList.contains("md") || htmlEl.classList.contains("material")) {
          setThemeState("material");
        }
      }
    }
  }, [theme]);
  return autoThemeDetection ? themeState : theme;
};

// node_modules/konsta/react/esm/shared/KonstaProvider.js
var KonstaProvider = (props) => {
  const {
    theme,
    dark,
    touchRipple = true,
    autoThemeDetection = true,
    children
  } = props;
  const currentTheme = useAutoTheme(theme, autoThemeDetection);
  return import_react4.default.createElement(KonstaContext.Provider, {
    value: {
      theme: currentTheme,
      dark,
      touchRipple
    }
  }, children);
};

// node_modules/konsta/shared/esm/cls.js
function cls() {
  const classes = [];
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  args.forEach((arg) => {
    if (typeof arg === "object" && arg.constructor === Object) {
      Object.keys(arg).forEach((key) => {
        if (arg[key])
          classes.push(key);
      });
    } else if (Array.isArray(arg)) {
      classes.push(...arg);
    } else if (typeof arg === "function") {
      classes.push(arg());
    } else if (arg && arg.value) {
      classes.push(arg.value);
    } else if (arg)
      classes.push(arg);
  });
  const uniqueClasses = [];
  classes.forEach((c) => {
    if (uniqueClasses.indexOf(c) < 0)
      uniqueClasses.push(c);
  });
  return uniqueClasses.filter((c) => !!c).join(" ");
}

// node_modules/konsta/shared/esm/position-class.js
var positionClass = function(position, className) {
  if (className === void 0) {
    className = "";
  }
  if (!className || typeof className !== "string")
    return position;
  const classes = ["static", "relative", "absolute", "fixed", "sticky"];
  const hasPositionClass = classes.filter((c) => className.indexOf(c) >= 0).length > 0;
  return hasPositionClass ? "" : position;
};

// node_modules/konsta/shared/esm/classes/AppClasses.js
var AppClasses = (props, currentTheme, classes) => {
  const {
    safeAreas
  } = props;
  return cls(currentTheme === "ios" && `k-ios`, currentTheme === "material" && "k-material", "k-app w-full h-full min-h-screen", safeAreas && "safe-areas", positionClass("relative", classes), classes);
};

// node_modules/konsta/react/esm/components/App.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var App = (0, import_react5.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    theme = "material",
    dark = true,
    touchRipple = true,
    safeAreas = true,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react5.useRef)(null);
  (0, import_react5.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const currentTheme = useAutoTheme(theme);
  const classes = AppClasses({
    ...props,
    safeAreas
  }, currentTheme, className);
  return import_react5.default.createElement(KonstaProvider, {
    theme: currentTheme,
    dark,
    touchRipple,
    autoThemeDetection: false
  }, import_react5.default.createElement(Component, _extends({
    ref: elRef,
    className: classes
  }, attrs), children));
});
App.displayName = "App";
var App_default = App;

// node_modules/konsta/react/esm/components/Actions.js
var import_react7 = __toESM(require_react(), 1);

// node_modules/konsta/react/esm/shared/use-theme-classes.js
var import_react6 = __toESM(require_react(), 1);
var propClasses = (classesObj, theme, state) => {
  if (typeof classesObj === "string")
    return classesObj;
  const arr = [classesObj.common, classesObj[theme]];
  if (state && classesObj[state]) {
    if (typeof classesObj[state] === "string")
      arr.push(classesObj[state]);
    else {
      arr.push(classesObj[state].common, classesObj[state][theme]);
    }
  }
  return arr;
};
var themeClasses = (classesObj, theme, addBaseClassName) => {
  const c = {};
  const themeSubKeys = ["common", "ios", "material"];
  Object.keys(classesObj).forEach((key) => {
    const addBaseClass = key === "base" ? addBaseClassName : "";
    const hasStates = typeof classesObj[key] !== "string" && Object.keys(classesObj[key]).filter((state) => !themeSubKeys.includes(state)).length > 0;
    if (!hasStates) {
      c[key] = cls(propClasses(classesObj[key], theme), addBaseClass);
      return;
    }
    c[key] = {};
    const defaultStateClasses = propClasses(classesObj[key], theme);
    c[key].default = cls(defaultStateClasses, addBaseClass);
    Object.keys(classesObj[key]).filter((state) => !themeSubKeys.includes(state)).forEach((state) => {
      c[key][state] = cls(defaultStateClasses, propClasses(classesObj[key], theme, state), addBaseClass);
    });
  });
  return c;
};
var useThemeClasses = function(_temp) {
  let {
    ios,
    material
  } = _temp === void 0 ? {} : _temp;
  const context = (0, import_react6.useContext)(KonstaContext);
  let theme = context.theme || "ios";
  if (ios)
    theme = "ios";
  if (material)
    theme = "material";
  return (classesObj, addBaseClassName) => themeClasses(classesObj, theme, addBaseClassName);
};

// node_modules/konsta/shared/esm/classes/ActionsClasses.js
var ActionsClasses = (props, classes) => {
  return {
    base: {
      common: cls("transition-transform z-40 left-1/2 bottom-0 transform -translate-x-1/2 max-w-md w-full overflow-hidden", positionClass("fixed", classes)),
      ios: "pt-2 px-2 pb-2-safe duration-300",
      material: "pb-safe last-child-hairline-b-none rounded-t-2xl duration-400 ease-material-in",
      opened: "",
      closed: "translate-y-full"
    },
    backdrop: {
      common: "fixed z-40 w-full h-full left-0 top-0 bg-black bg-opacity-50 duration-300",
      opened: "",
      closed: "opacity-0 pointer-events-none"
    }
  };
};

// node_modules/konsta/react/esm/components/Actions.js
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
var Actions = (0, import_react7.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    ios,
    material,
    opened,
    backdrop = true,
    onBackdropClick,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react7.useRef)(null);
  (0, import_react7.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const state = opened ? "opened" : "closed";
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const c = themeClasses2(ActionsClasses(props, className), className);
  return import_react7.default.createElement(import_react7.default.Fragment, null, backdrop && import_react7.default.createElement("div", {
    className: c.backdrop[state],
    onClick: onBackdropClick
  }), import_react7.default.createElement(Component, _extends2({
    ref: elRef,
    className: c.base[state]
  }, attrs), children));
});
Actions.displayName = "Actions";
var Actions_default = Actions;

// node_modules/konsta/react/esm/components/ActionsGroup.js
var import_react8 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ActionsGroupClasses.js
var ActionsGroupClasses = (props) => {
  const {
    dividers
  } = props;
  return {
    base: {
      common: `relative`,
      ios: `mt-2 first:mt-0 last-child-hairline-b-none`,
      material: cls(dividers && `hairline-b`)
    }
  };
};

// node_modules/konsta/react/esm/components/ActionsGroup.js
function _extends3() {
  _extends3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
var ActionsGroup = (0, import_react8.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    ios,
    material,
    dividers = true,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react8.useRef)(null);
  (0, import_react8.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const c = themeClasses2(ActionsGroupClasses({
    dividers,
    ...props
  }), className);
  return import_react8.default.createElement(Component, _extends3({
    ref: elRef,
    className: c.base
  }, attrs), children);
});
ActionsGroup.displayName = "ActionsGroup";
var ActionsGroup_default = ActionsGroup;

// node_modules/konsta/react/esm/components/ActionsButton.js
var import_react12 = __toESM(require_react(), 1);

// node_modules/konsta/react/esm/shared/use-theme.js
var import_react9 = __toESM(require_react(), 1);
var useTheme = function(_temp) {
  let {
    ios,
    material
  } = _temp === void 0 ? {} : _temp;
  const context = (0, import_react9.useContext)(KonstaContext);
  let theme = context.theme || "ios";
  if (ios)
    theme = "ios";
  if (material)
    theme = "material";
  return theme;
};

// node_modules/konsta/react/esm/shared/use-touch-ripple.js
var import_react10 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/touch-ripple-class.js
var TouchRipple = class {
  constructor(el, x, y) {
    const ripple = this;
    if (!el)
      return void 0;
    ripple.el = el;
    const {
      left,
      top,
      width,
      height
    } = el.getBoundingClientRect();
    const center = {
      x: x - left,
      y: y - top
    };
    let diameter = Math.max((height ** 2 + width ** 2) ** 0.5, 48);
    const isInset = el.classList.contains("k-touch-ripple-inset");
    if (isInset) {
      diameter = Math.max(Math.min(width, height), 48);
    }
    const isOverflowHidden = typeof window !== "undefined" && window.getComputedStyle(el, null).getPropertyValue("overflow") === "hidden";
    if (!isInset && isOverflowHidden) {
      const distanceFromCenter = ((center.x - width / 2) ** 2 + (center.y - height / 2) ** 2) ** 0.5;
      const scale = (diameter / 2 + distanceFromCenter) / (diameter / 2);
      ripple.rippleTransform = `translate3d(0px, 0px, 0) scale(${scale})`;
    } else {
      ripple.rippleTransform = `translate3d(${-center.x + width / 2}px, ${-center.y + height / 2}px, 0) scale(1)`;
    }
    ripple.rippleWaveEl = document.createElement("span");
    ripple.rippleWaveEl.classList.add("k-touch-ripple-wave");
    ripple.rippleWaveEl.setAttribute("hidden", "");
    ripple.rippleWaveEl.style = `
      width: ${diameter}px;
      height: ${diameter}px;
      margin-top:-${diameter / 2}px;
      margin-left:-${diameter / 2}px;
      left:${center.x}px;
      top:${center.y}px; --k-ripple-transform: ${ripple.rippleTransform}`;
    el.insertAdjacentElement("afterbegin", ripple.rippleWaveEl);
    const animationEnd = () => {
      ripple.rippleWaveEl.removeEventListener("animationend", animationEnd);
      if (!ripple.rippleWaveEl)
        return;
      if (ripple.rippleWaveEl.classList.contains("k-touch-ripple-wave-out"))
        return;
      ripple.rippleWaveEl.classList.add("k-touch-ripple-wave-in");
      if (ripple.shouldBeRemoved) {
        ripple.out();
      }
    };
    ripple.rippleWaveEl.addEventListener("animationend", animationEnd);
    return ripple;
  }
  destroy() {
    let ripple = this;
    if (ripple.rippleWaveEl) {
      ripple.el.removeChild(ripple.rippleWaveEl);
    }
    Object.keys(ripple).forEach((key) => {
      ripple[key] = null;
      delete ripple[key];
    });
    ripple = null;
  }
  out() {
    const ripple = this;
    const {
      rippleWaveEl
    } = this;
    clearTimeout(ripple.removeTimeout);
    rippleWaveEl.classList.add("k-touch-ripple-wave-out");
    ripple.removeTimeout = setTimeout(() => {
      ripple.destroy();
    }, 300);
    const animationEnd = () => {
      ripple.rippleWaveEl.removeEventListener("animationend", animationEnd);
      clearTimeout(ripple.removeTimeout);
      ripple.destroy();
    };
    ripple.rippleWaveEl.addEventListener("animationend", animationEnd);
  }
  remove() {
    const ripple = this;
    if (ripple.shouldBeRemoved)
      return;
    ripple.removeTimeout = setTimeout(() => {
      ripple.destroy();
    }, 400);
    ripple.shouldBeRemoved = true;
    if (ripple.rippleWaveEl.classList.contains("k-touch-ripple-wave-in")) {
      ripple.out();
    }
  }
};

// node_modules/konsta/react/esm/shared/use-touch-ripple.js
var useTouchRipple = (elRef, needsTouchRipple, eventsElRef) => {
  const context = (0, import_react10.useContext)(KonstaContext);
  if (!eventsElRef)
    eventsElRef = elRef;
  const ripple = (0, import_react10.useRef)(null);
  const removeRipple = () => {
    if (ripple.current)
      ripple.current.remove();
    ripple.current = null;
  };
  const onPointerDown = (e) => {
    ripple.current = new TouchRipple(elRef.current, e.pageX, e.pageY);
  };
  const onPointerMove = () => {
    removeRipple();
  };
  const onPointerUp = () => {
    removeRipple();
  };
  const attachEvents = () => {
    if (!context.touchRipple)
      return;
    const el = eventsElRef.current;
    el.addEventListener("pointerdown", onPointerDown);
    el.addEventListener("pointermove", onPointerMove);
    el.addEventListener("pointerup", onPointerUp);
    el.addEventListener("pointercancel", onPointerUp);
    el.addEventListener("contextmenu", onPointerUp);
  };
  const detachEvents = () => {
    const el = eventsElRef.current;
    el.removeEventListener("pointerdown", onPointerDown);
    el.removeEventListener("pointermove", onPointerMove);
    el.removeEventListener("pointerup", onPointerUp);
    el.removeEventListener("pointercancel", onPointerUp);
    el.removeEventListener("contextmenu", onPointerUp);
  };
  const onMounted = () => {
    if (!eventsElRef || !eventsElRef.current || !needsTouchRipple)
      return;
    attachEvents();
  };
  const onDestroy = () => {
    if (!eventsElRef || !eventsElRef.current || !needsTouchRipple)
      return;
    detachEvents();
  };
  (0, import_react10.useEffect)(() => {
    onMounted();
    return () => onDestroy();
  });
};

// node_modules/konsta/react/esm/shared/use-dark-classes.js
var import_react11 = __toESM(require_react(), 1);
var useDarkClasses = () => {
  const context = (0, import_react11.useContext)(KonstaContext);
  return (classNames) => {
    if (!context.dark)
      return "";
    return classNames;
  };
};

// node_modules/konsta/shared/esm/classes/ActionsButtonClasses.js
var ActionsButtonClasses = (props, colors, darkClasses) => {
  const {
    fontSizeIos,
    fontSizeMaterial,
    bold,
    dividers
  } = props;
  return {
    base: {
      common: cls(`flex items-center w-full px-4 relative z-10 overflow-hidden`, dividers && "hairline-b"),
      ios: cls(`h-14`, colors.textIos, colors.bgIos, colors.activeBgIos, fontSizeIos, "first:rounded-t-xl last:rounded-b-xl justify-center", bold && "font-semibold"),
      material: cls(`h-12`, colors.textMaterial, colors.bgMaterial, colors.activeBgMaterial, fontSizeMaterial, "justify-start", darkClasses("dark:touch-ripple-white"), bold && "font-medium")
    }
  };
};

// node_modules/konsta/shared/esm/colors/ActionsButtonColors.js
var ActionsButtonColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("bg-white", dark("dark:bg-neutral-800")),
    bgMaterial: cls("bg-md-light-surface-3", dark("dark:bg-md-dark-surface-3")),
    activeBgIos: cls("active:bg-neutral-200", dark("dark:active:bg-neutral-700")),
    activeBgMaterial: "",
    textIos: "text-primary",
    textMaterial: cls("text-md-light-on-surface", dark("dark:text-md-dark-on-surface")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/ActionsButton.js
function _extends4() {
  _extends4 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
var ActionsButton = (0, import_react12.forwardRef)((props, ref) => {
  const {
    component = "button",
    className,
    colors: colorsProp,
    ios,
    material,
    bold,
    boldIos = false,
    boldMaterial = false,
    fontSizeIos = "text-xl",
    fontSizeMaterial = "text-base",
    // Anchor props
    href,
    touchRipple = true,
    dividers = void 0,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const rippleElRef = (0, import_react12.useRef)(null);
  (0, import_react12.useImperativeHandle)(ref, () => ({
    el: rippleElRef.current
  }));
  let Component = component;
  if (typeof props.component === "undefined" && (href || href === "")) {
    Component = "a";
  }
  const attrs = {
    href,
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  useTouchRipple(rippleElRef, theme === "material" && touchRipple);
  const colors = ActionsButtonColors(colorsProp, dark);
  const isDividers = typeof dividers === "undefined" ? theme === "ios" : dividers;
  const isBold = typeof bold === "undefined" ? theme === "ios" ? boldIos : boldMaterial : bold;
  const c = themeClasses2(ActionsButtonClasses({
    fontSizeIos,
    fontSizeMaterial,
    bold: isBold,
    dividers: isDividers,
    ...props
  }, colors, dark), className);
  return import_react12.default.createElement(Component, _extends4({
    ref: rippleElRef,
    role: "button",
    tabIndex: "0",
    className: c.base
  }, attrs), children);
});
ActionsButton.displayName = "ActionsButton";
var ActionsButton_default = ActionsButton;

// node_modules/konsta/react/esm/components/ActionsLabel.js
var import_react13 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ActionsLabelClasses.js
var ActionsLabelClasses = (props, colors) => {
  const {
    fontSizeIos,
    fontSizeMaterial,
    dividers
  } = props;
  return {
    base: {
      common: cls(`flex items-center w-full px-4 relative z-10 overflow-hidden ${colors.activeBg}`, dividers && "hairline-b"),
      ios: cls(`h-14`, colors.bgIos, colors.textIos, fontSizeIos, "first:rounded-t-xl last:rounded-b-xl justify-center"),
      material: cls(`h-12`, colors.bgMaterial, colors.textMaterial, fontSizeMaterial, "font-medium", "justify-start")
    }
  };
};

// node_modules/konsta/shared/esm/colors/ActionsLabelColors.js
var ActionsLabelColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("bg-white", dark("dark:bg-neutral-800")),
    bgMaterial: cls("bg-md-light-surface-3", dark("dark:bg-md-dark-surface-3")),
    textIos: cls("text-black text-opacity-55", dark("dark:text-white dark:text-opacity-55")),
    textMaterial: cls("text-md-light-primary", dark("dark:text-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/ActionsLabel.js
function _extends5() {
  _extends5 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
var ActionsLabel = (0, import_react13.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    ios,
    material,
    fontSizeIos = "text-sm",
    fontSizeMaterial = "text-sm",
    dividers = void 0,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react13.useRef)(null);
  (0, import_react13.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = ActionsLabelColors(colorsProp, dark);
  const isDividers = typeof dividers === "undefined" ? theme === "ios" : dividers;
  const c = themeClasses2(ActionsLabelClasses({
    fontSizeIos,
    fontSizeMaterial,
    dividers: isDividers,
    ...props
  }, colors), className);
  return import_react13.default.createElement(Component, _extends5({
    ref: elRef,
    className: c.base
  }, attrs), children);
});
ActionsLabel.displayName = "ActionsLabel";
var ActionsLabel_default = ActionsLabel;

// node_modules/konsta/react/esm/components/Badge.js
var import_react14 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/BadgeClasses.js
var BadgeClasses = (props, colors) => {
  return {
    base: {
      common: `${colors.text} ${colors.bg} inline-flex items-center justify-center rounded-full leading-none`,
      ios: `font-semibold`,
      material: `font-medium`,
      sm: "text-2xs min-w-4 min-h-4 px-0.5",
      md: "text-xs min-w-5 min-h-5 px-1.5 py-0.5"
    }
  };
};

// node_modules/konsta/shared/esm/colors/BadgeColors.js
var BadgeColors = function(colorsProp) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bg: "bg-primary",
    text: "text-white",
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Badge.js
function _extends6() {
  _extends6 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends6.apply(this, arguments);
}
var Badge = (0, import_react14.forwardRef)((props, ref) => {
  const {
    component = "span",
    className,
    colors: colorsProp,
    small,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react14.useRef)(null);
  (0, import_react14.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const colors = BadgeColors(colorsProp);
  const size = small ? "sm" : "md";
  const c = themeClasses2(BadgeClasses(props, colors), className);
  return import_react14.default.createElement(Component, _extends6({
    ref: elRef,
    className: c.base[size]
  }, attrs), children);
});
Badge.displayName = "Badge";
var Badge_default = Badge;

// node_modules/konsta/react/esm/components/Block.js
var import_react15 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/BlockClasses.js
var BlockClasses = (props, colors, classes) => {
  const {
    inset,
    nested,
    margin,
    padding,
    strong,
    outline
  } = props;
  return {
    base: {
      common: cls(`text-sm z-10`, positionClass("relative", classes), !inset && !nested && outline && "hairline-t hairline-b", inset && outline && "border", inset && "px-4", !inset && "pl-4-safe pr-4-safe", !nested && margin, (strong || outline) && padding),
      ios: cls(colors.textIos, strong && colors.strongBgIos, inset && outline && colors.outlineIos),
      material: cls(colors.textMaterial, strong && colors.strongBgMaterial, inset && outline && colors.outlineMaterial)
    },
    inset: {
      common: `ml-4-safe mr-4-safe overflow-hidden`,
      ios: `rounded-lg`,
      material: `rounded-2xl`
    }
  };
};

// node_modules/konsta/shared/esm/colors/BlockColors.js
var BlockColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    outlineIos: cls("border-black border-opacity-20", dark("dark:border-white dark:border-opacity-15")),
    outlineMaterial: cls("border-md-light-outline", dark("border-md-dark-outline")),
    strongBgIos: cls(`bg-ios-light-surface-1`, dark("dark:bg-ios-dark-surface-1")),
    strongBgMaterial: cls("bg-md-light-surface-1", dark("dark:bg-md-dark-surface-1")),
    textIos: "",
    textMaterial: cls("text-md-light-on-surface", dark("dark:text-md-dark-on-surface")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Block.js
function _extends7() {
  _extends7 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends7.apply(this, arguments);
}
var Block = (0, import_react15.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    margin = "my-8",
    padding = "py-4",
    inset,
    insetIos,
    insetMaterial,
    strong,
    strongIos,
    strongMaterial,
    outline,
    outlineIos,
    outlineMaterial,
    nested,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react15.useRef)(null);
  (0, import_react15.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = BlockColors(colorsProp, dark);
  const isStrong = typeof strong === "undefined" ? theme === "ios" ? strongIos : strongMaterial : strong;
  const isOutline = typeof outline === "undefined" ? theme === "ios" ? outlineIos : outlineMaterial : outline;
  const isInset = typeof inset === "undefined" ? theme === "ios" ? insetIos : insetMaterial : inset;
  const c = themeClasses2(BlockClasses({
    ...props,
    margin,
    padding,
    inset: isInset,
    strong: isStrong,
    outline: isOutline
  }, colors, className));
  const classes = cls(
    // base
    c.base,
    // inset
    isInset && c.inset,
    className
  );
  return import_react15.default.createElement(Component, _extends7({
    ref: elRef,
    className: classes
  }, attrs), children);
});
Block.displayName = "Block";
var Block_default = Block;

// node_modules/konsta/react/esm/components/BlockFooter.js
var import_react16 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/BlockFooterClasses.js
var BlockFooterClasses = (props, colors) => {
  const {
    inset
  } = props;
  return {
    base: {
      common: cls(`mb-8 flex items-center -mt-6 text-sm`, inset ? "pl-8-safe pr-8-safe" : "pl-4-safe pr-4-safe"),
      ios: colors.textIos,
      material: colors.textMaterial
    }
  };
};

// node_modules/konsta/shared/esm/colors/BlockFooterColors.js
var BlockFooterColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    textIos: cls("text-black text-opacity-75", dark("dark:text-white dark:text-opacity-75")),
    textMaterial: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/BlockFooter.js
function _extends8() {
  _extends8 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends8.apply(this, arguments);
}
var BlockFooter = (0, import_react16.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    ios,
    material,
    inset,
    insetIos,
    insetMaterial,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react16.useRef)(null);
  (0, import_react16.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const theme = useTheme();
  const isInset = typeof inset === "undefined" ? theme === "ios" ? insetIos : insetMaterial : inset;
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = BlockFooterColors(colorsProp, dark);
  const c = themeClasses2(BlockFooterClasses({
    ...props,
    inset: isInset
  }, colors), className);
  return import_react16.default.createElement(Component, _extends8({
    ref: elRef,
    className: c.base
  }, attrs), children);
});
BlockFooter.displayName = "BlockFooter";
var BlockFooter_default = BlockFooter;

// node_modules/konsta/react/esm/components/BlockHeader.js
var import_react17 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/BlockHeaderClasses.js
var BlockHeaderClasses = (props, colors) => {
  const {
    inset
  } = props;
  return {
    base: {
      common: cls(`mt-8 flex items-center -mb-6 text-sm`, inset ? "pl-8-safe pr-8-safe" : "pl-4-safe pr-4-safe"),
      ios: colors.textIos,
      material: colors.textMaterial
    }
  };
};

// node_modules/konsta/shared/esm/colors/BlockHeaderColors.js
var BlockHeaderColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    textIos: cls("text-black", dark("dark:text-white")),
    textMaterial: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/BlockHeader.js
function _extends9() {
  _extends9 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends9.apply(this, arguments);
}
var BlockHeader = (0, import_react17.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    ios,
    material,
    inset,
    insetIos,
    insetMaterial,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react17.useRef)(null);
  (0, import_react17.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme();
  const isInset = typeof inset === "undefined" ? theme === "ios" ? insetIos : insetMaterial : inset;
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = BlockHeaderColors(colorsProp, dark);
  const c = themeClasses2(BlockHeaderClasses({
    ...props,
    inset: isInset
  }, colors), className);
  return import_react17.default.createElement(Component, _extends9({
    ref: elRef,
    className: c.base
  }, attrs), children);
});
BlockHeader.displayName = "BlockHeader";
var BlockHeader_default = BlockHeader;

// node_modules/konsta/react/esm/components/BlockTitle.js
var import_react18 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/BlockTitleClasses.js
var BlockTitleClasses = (props, colors) => {
  const {
    withBlock,
    medium,
    large
  } = props;
  return {
    base: {
      common: `pl-4-safe pr-4-safe mt-8 flex justify-between items-center ${withBlock ? "-mb-6" : "mb-2"}`,
      ios: cls(`font-semibold ${colors.textIos}`, large && "text-[1.5rem]", medium && "text-[1.125rem]", !medium && !large && "text-[1rem]"),
      material: cls(`font-medium ${colors.textMaterial}`, large && "text-[1.375rem]", medium && "text-[1rem]", !medium && !large && "text-[0.875rem]")
    }
  };
};

// node_modules/konsta/shared/esm/colors/BlockTitleColors.js
var BlockTitleColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    textIos: "",
    textMaterial: cls("text-md-light-primary", dark("dark:text-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/BlockTitle.js
function _extends10() {
  _extends10 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends10.apply(this, arguments);
}
var BlockTitle = (0, import_react18.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    withBlock = true,
    medium,
    large,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react18.useRef)(null);
  (0, import_react18.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = BlockTitleColors(colorsProp, dark);
  const c = themeClasses2(BlockTitleClasses({
    ...props,
    withBlock
  }, colors), className);
  return import_react18.default.createElement(Component, _extends10({
    ref: elRef,
    className: c.base
  }, attrs), children);
});
BlockTitle.displayName = "BlockTitle";
var BlockTitle_default = BlockTitle;

// node_modules/konsta/react/esm/components/Breadcrumbs.js
var import_react19 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/BreadcrumbsClasses.js
var BreadcrumbsClasses = (props) => {
  const {
    fontSizeIos,
    fontSizeMaterial
  } = props;
  return {
    base: {
      common: `flex items-center justify-start overflow-auto whitespace-nowrap py-1 px-0 space-x-3 no-scrollbar rtl:space-x-reverse`,
      ios: fontSizeIos,
      material: fontSizeMaterial
    }
  };
};

// node_modules/konsta/react/esm/components/Breadcrumbs.js
function _extends11() {
  _extends11 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends11.apply(this, arguments);
}
var Breadcrumbs = (0, import_react19.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    fontSizeIos = "text-[17px]",
    fontSizeMaterial = "text-[14px]",
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react19.useRef)(null);
  (0, import_react19.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const c = themeClasses2(BreadcrumbsClasses({
    ...props,
    fontSizeIos,
    fontSizeMaterial
  }), className);
  return import_react19.default.createElement(Component, _extends11({
    ref: elRef,
    className: c.base
  }, attrs), children);
});
Breadcrumbs.displayName = "Breadcrumbs";
var Breadcrumbs_default = Breadcrumbs;

// node_modules/konsta/react/esm/components/BreadcrumbsItem.js
var import_react20 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/BreadcrumbsItemClasses.js
var BreadcrumbsItemClasses = (props, colors) => {
  const {
    active
  } = props;
  return {
    base: {
      common: cls(`flex items-center overflow-hidden`),
      ios: cls(colors.textIos, colors.bgIos, active ? colors.textActiveIos : colors.textIos, active && "font-semibold"),
      material: cls(`font-medium px-2 py-1 rounded-lg`, colors.bgMaterial, active ? colors.textActiveMaterial : colors.textMaterial)
    }
  };
};

// node_modules/konsta/shared/esm/colors/BreadcrumbsItemColors.js
var BreadcrumbsItemColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    textIos: cls("text-black text-opacity-55", dark("dark:text-white dark:text-opacity-55")),
    textMaterial: cls("text-md-light-on-secondary-container", dark("dark:text-md-dark-on-secondary-container")),
    bgIos: "",
    bgMaterial: cls("bg-md-light-secondary-container", dark("dark:bg-md-dark-secondary-container")),
    textActiveIos: cls("text-black", dark("dark:text-white")),
    textActiveMaterial: cls("text-md-light-on-secondary-container", dark("dark:text-md-dark-on-secondary-container")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/BreadcrumbsItem.js
function _extends12() {
  _extends12 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends12.apply(this, arguments);
}
var BreadcrumbsItem = (0, import_react20.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    ios,
    material,
    colors: colorsProp,
    active,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react20.useRef)(null);
  (0, import_react20.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = BreadcrumbsItemColors(colorsProp, dark);
  const c = themeClasses2(BreadcrumbsItemClasses({
    ...props
  }, colors), className);
  return import_react20.default.createElement(Component, _extends12({
    ref: elRef,
    className: c.base,
    role: "menuitem",
    tabIndex: "0"
  }, attrs), children);
});
BreadcrumbsItem.displayName = "BreadcrumbsItem";
var BreadcrumbsItem_default = BreadcrumbsItem;

// node_modules/konsta/react/esm/components/BreadcrumbsSeparator.js
var import_react22 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/BreadcrumbsSeparatorClasses.js
var BreadcrumbsSeparatorClasses = () => {
  return {
    base: {
      common: `w-3 opacity-35 flex justify-center`,
      ios: ``,
      material: ``
    },
    icon: {
      common: "rtl:rotate-180",
      ios: "h-3",
      material: "h-2.5"
    }
  };
};

// node_modules/konsta/react/esm/components/icons/ChevronIcon.js
var import_react21 = __toESM(require_react(), 1);
function _extends13() {
  _extends13 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends13.apply(this, arguments);
}
var ChevronIcon = (props) => {
  return import_react21.default.createElement("svg", _extends13({
    xmlns: "http://www.w3.org/2000/svg",
    width: "8",
    height: "14",
    viewBox: "0 0 12 20",
    fill: "currentcolor"
  }, props), import_react21.default.createElement("path", {
    d: "M11.518406,10.5648622 C11.4831857,10.6163453 11.4426714,10.6653692 11.3968592,10.7111814 L2.5584348,19.5496058 C1.9753444,20.1326962 1.03186648,20.1345946 0.44199608,19.5447242 C-0.14379032,18.9589377 -0.14922592,18.0146258 0.43711448,17.4282854 L7.87507783,9.9903221 L0.4431923,2.5584366 C-0.1398981,1.9753462 -0.1417965,1.0318683 0.448074,0.4419979 C1.0338604,-0.1437886 1.9781723,-0.1492241 2.56451268,0.4371163 L11.4029371,9.2755407 C11.7556117,9.6282153 11.7969345,10.1725307 11.518406,10.5648622 Z"
  }));
};
var ChevronIcon_default = ChevronIcon;

// node_modules/konsta/react/esm/components/BreadcrumbsSeparator.js
function _extends14() {
  _extends14 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends14.apply(this, arguments);
}
var BreadcrumbsSeparator = (0, import_react22.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react22.useRef)(null);
  (0, import_react22.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const c = themeClasses2(BreadcrumbsSeparatorClasses({
    ...props
  }), className);
  return import_react22.default.createElement(Component, _extends14({
    ref: elRef,
    className: c.base
  }, attrs), import_react22.default.createElement(ChevronIcon_default, {
    className: c.icon
  }), children);
});
BreadcrumbsSeparator.displayName = "BreadcrumbsSeparator";
var BreadcrumbsSeparator_default = BreadcrumbsSeparator;

// node_modules/konsta/react/esm/components/BreadcrumbsCollapsed.js
var import_react23 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/BreadcrumbsCollapsedClasses.js
var BreadcrumbsCollapsedClasses = (props, colors) => {
  return {
    base: {
      common: `flex items-center cursor-pointer space-x-0.75 rtl:space-x-reverse ${colors.bg}`,
      ios: cls(`rounded active:opacity-30 px-1.5 h-[1em] duration-300 active:duration-0`, colors.bgIos),
      material: cls("py-3 px-2 rounded-lg", colors.bgMaterial)
    },
    dot: {
      common: `w-1 h-1 rounded-full ${colors.dotBg}`,
      ios: colors.dotBgIos,
      material: colors.dotBgMaterial
    }
  };
};

// node_modules/konsta/shared/esm/colors/BreadcrumbsCollapsedColors.js
var BreadcrumbsCollapsedColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("bg-black bg-opacity-15", dark("dark:bg-white dark:bg-opacity-15")),
    bgMaterial: cls("bg-md-light-secondary-container", dark("dark:bg-md-dark-secondary-container")),
    dotBgIos: cls("bg-black", dark("dark:bg-white")),
    dotBgMaterial: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/BreadcrumbsCollapsed.js
function _extends15() {
  _extends15 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends15.apply(this, arguments);
}
var BreadcrumbsCollapsed = (0, import_react23.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react23.useRef)(null);
  (0, import_react23.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const dark = useDarkClasses();
  const colors = BreadcrumbsCollapsedColors(colorsProp, dark);
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const c = themeClasses2(BreadcrumbsCollapsedClasses({
    ...props
  }, colors), className);
  return import_react23.default.createElement(Component, _extends15({
    ref: elRef,
    role: "button",
    tabIndex: "0",
    className: c.base
  }, attrs), import_react23.default.createElement("span", {
    className: c.dot
  }), import_react23.default.createElement("span", {
    className: c.dot
  }), import_react23.default.createElement("span", {
    className: c.dot
  }), children);
});
BreadcrumbsCollapsed.displayName = "BreadcrumbsCollapsed";
var BreadcrumbsCollapsed_default = BreadcrumbsCollapsed;

// node_modules/konsta/react/esm/components/Button.js
var import_react24 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ButtonClasses.js
var ButtonClasses = (props, colors, classes, darkClasses) => {
  const {
    inline,
    segmented,
    segmentedStrong,
    segmentedActive,
    disabled
  } = props;
  return {
    base: {
      common: cls("flex text-center justify-center items-center appearance-none py-1 transition-colors focus:outline-none cursor-pointer select-none overflow-hidden z-10", inline ? "inline-flex" : "w-full flex", positionClass("relative", classes), disabled && "pointer-events-none", segmentedStrong && segmentedActive && "k-segmented-strong-button-active"),
      ios: `uppercase duration-100 font-semibold px-2`,
      material: `duration-300 font-medium px-4`,
      square: {
        ios: segmented && !segmentedStrong ? "first:rounded-s last:rounded-e" : "rounded",
        material: segmented && !segmentedStrong ? "first:rounded-lg-s last:rounded-lg-e" : "rounded-lg"
      },
      rounded: segmented && !segmentedStrong ? "" : "rounded-full"
    },
    style: {
      fill: {
        common: cls(disabled && cls(colors.disabledBg, colors.disabledText)),
        ios: cls(disabled ? cls(colors.disabledBg, colors.disabledText) : `${colors.fillTextIos} ${colors.fillBgIos} ${colors.fillActiveBgIos}`),
        material: cls(disabled ? cls(colors.disabledBg, colors.disabledText) : cls(colors.fillTextMaterial, colors.fillBgMaterial, colors.fillActiveBgMaterial, colors.fillTouchRipple))
      },
      outline: {
        common: cls(disabled ? cls(colors.disabledText, colors.disabledBorder) : cls("active:bg-opacity-15", colors.touchRipple)),
        ios: cls(!segmented && "border-2", !disabled && !segmented && colors.outlineBorderIos, !disabled && cls(colors.textIos, colors.activeBgIos)),
        material: cls(!segmented && "border", !disabled && !segmented && colors.outlineBorderMaterial, !disabled && cls(colors.textMaterial, colors.activeBgMaterial))
      },
      clear: {
        common: cls(disabled ? colors.disabledText : `active:bg-opacity-15 ${colors.touchRipple}`),
        ios: !disabled && cls(colors.textIos, colors.activeBgIos),
        material: !disabled && cls(colors.textMaterial, colors.activeBgMaterial)
      },
      tonal: {
        common: disabled ? cls(colors.disabledBg, colors.disabledText) : cls(colors.touchRipple),
        ios: !disabled && cls(colors.tonalTextIos, colors.tonalBgIos, colors.activeBgIos, "bg-opacity-15 active:bg-opacity-25"),
        material: !disabled && cls(colors.tonalTextMaterial, colors.tonalBgMaterial, colors.activeBgMaterial)
      },
      segmentedStrong: cls(`active:bg-black active:bg-opacity-10`, darkClasses("dark:active:bg-white dark:active:bg-opacity-5 dark:touch-ripple-white")),
      segmentedStrongActive: "duration-0"
    },
    size: {
      small: {
        ios: `text-xs h-7`,
        material: `text-sm h-8`
      },
      medium: {
        common: "text-sm",
        ios: `h-7`,
        material: `h-10`
      },
      large: {
        ios: `h-11`,
        material: `h-12`
      }
    },
    raised: `shadow active:shadow-lg`
  };
};

// node_modules/konsta/shared/esm/colors/ButtonColors.js
var ButtonColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    activeBgIos: "active:bg-primary",
    activeBgMaterial: "",
    textIos: "text-primary",
    textMaterial: cls("text-md-light-primary", "dark:text-md-dark-primary"),
    fillTextIos: cls("text-white"),
    fillTextMaterial: cls("text-md-light-on-primary", dark("dark:text-md-dark-on-primary")),
    fillActiveBgIos: "active:bg-ios-primary-shade",
    fillActiveBgMaterial: "",
    fillBgIos: "bg-primary",
    fillBgMaterial: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary")),
    fillTouchRipple: cls("touch-ripple-white", "dark:touch-ripple-primary"),
    outlineBorderIos: "border-primary",
    outlineBorderMaterial: cls("border-md-light-outline", dark("dark:border-md-dark-outline")),
    tonalBgIos: "bg-primary",
    tonalBgMaterial: cls("bg-md-light-secondary-container", dark("dark:bg-md-dark-secondary-container")),
    tonalTextIos: "text-primary",
    tonalTextMaterial: cls("text-md-light-on-secondary-container", dark("dark:text-md-dark-on-secondary-container")),
    touchRipple: "touch-ripple-primary",
    disabledText: cls("text-black text-opacity-30", dark("dark:text-white dark:text-opacity-30")),
    disabledBg: cls("bg-black bg-opacity-10", dark("dark:bg-white dark:bg-opacity-10")),
    disabledBorder: cls("border-black border-opacity-10", dark("dark:border-white dark:border-opacity-10")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Button.js
function _extends16() {
  _extends16 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends16.apply(this, arguments);
}
var Button = (0, import_react24.forwardRef)((props, ref) => {
  const {
    component = "button",
    className,
    colors: colorsProp,
    ios,
    material,
    disabled,
    // Anchor props
    href,
    // Style props
    outline,
    outlineIos,
    outlineMaterial,
    clear,
    clearIos,
    clearMaterial,
    tonal,
    tonalIos,
    tonalMaterial,
    rounded,
    roundedIos,
    roundedMaterial,
    small,
    smallIos,
    smallMaterial,
    large,
    largeIos,
    largeMaterial,
    raised,
    raisedIos,
    raisedMaterial,
    inline,
    // Segmented
    segmented,
    segmentedStrong,
    segmentedActive,
    touchRipple = true,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const rippleElRef = (0, import_react24.useRef)(null);
  (0, import_react24.useImperativeHandle)(ref, () => ({
    el: rippleElRef.current
  }));
  let Component = component;
  if (typeof props.component === "undefined" && (href || href === ""))
    Component = "a";
  const attrs = {
    href,
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  useTouchRipple(rippleElRef, theme === "material" && touchRipple);
  const getThemeSpecificProps = (obj) => {
    const res = {};
    Object.keys(obj).forEach((key) => {
      res[key] = typeof obj[key] === "undefined" ? theme === "ios" ? props[`${key}Ios`] : props[`${key}Material`] : obj[key];
    });
    return res;
  };
  const themeProps = getThemeSpecificProps({
    outline,
    clear,
    tonal,
    rounded,
    small,
    large,
    raised
  });
  const size = themeProps.large ? "large" : themeProps.small ? "small" : "medium";
  let style = themeProps.outline ? "outline" : themeProps.clear || segmented && !segmentedActive ? "clear" : themeProps.tonal ? "tonal" : "fill";
  if (segmentedStrong)
    style = "segmentedStrong";
  if (segmentedStrong && segmentedActive)
    style = "segmentedStrongActive";
  const colors = ButtonColors(colorsProp, dark);
  const c = themeClasses2(ButtonClasses({
    ...props,
    ...themeProps
  }, colors, className, dark));
  const classes = cls(
    c.base[themeProps.rounded ? "rounded" : "square"],
    // style
    c.style[style],
    // size
    c.size[size],
    themeProps.raised && c.raised,
    className
  );
  return import_react24.default.createElement(Component, _extends16({
    ref: rippleElRef,
    className: classes,
    disabled,
    role: "button",
    tabIndex: "0"
  }, attrs), children);
});
Button.displayName = "Button";
var Button_default = Button;

// node_modules/konsta/react/esm/components/Card.js
var import_react25 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/CardClasses.js
var CardClasses = (props, colors) => {
  const {
    margin,
    headerDivider,
    footerDivider,
    contentWrapPadding
  } = props;
  return {
    base: {
      common: cls(margin, `overflow-hidden`),
      ios: cls("rounded-lg", colors.bgIos, colors.textIos),
      material: cls("rounded-2xl", colors.bgMaterial, colors.textMaterial),
      plain: "",
      raised: "shadow",
      outline: {
        common: cls(`border`),
        ios: colors.outlineIos,
        material: colors.outlineMaterial
      }
    },
    header: {
      common: cls(headerDivider && `border-b`, `p-4`),
      ios: cls(headerDivider && colors.outlineIos, props.headerFontSizeIos),
      material: cls(headerDivider && colors.outlineMaterial, props.headerFontSizeMaterial)
    },
    content: cls(contentWrapPadding, "text-sm"),
    footer: {
      common: cls(headerDivider && `border-t`, `text-sm p-4`),
      ios: cls(colors.footerTextIos, footerDivider && colors.outlineIos),
      material: cls(colors.footerTextMaterial, footerDivider && colors.outlineMaterial)
    }
  };
};

// node_modules/konsta/shared/esm/colors/CardColors.js
var CardColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    textIos: cls(""),
    textMaterial: cls("text-md-light-on-surface", dark("dark:text-md-dark-on-surface")),
    bgIos: cls(`bg-ios-light-surface-1`, dark("dark:bg-ios-dark-surface-1")),
    bgMaterial: cls("bg-md-light-surface-1", dark("dark:bg-md-dark-surface-1")),
    footerTextIos: cls(`text-black text-opacity-55`, dark("dark:text-white dark:text-opacity-55")),
    footerTextMaterial: cls(`text-md-light-on-surface-variant`, dark("dark:text-md-dark-on-surface-variant")),
    outlineIos: cls("border-black border-opacity-20", dark("dark:border-white dark:border-opacity-20")),
    outlineMaterial: cls("border-md-light-outline", dark("dark:border-md-dark-outline")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Card.js
function _extends17() {
  _extends17 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends17.apply(this, arguments);
}
var Card = (0, import_react25.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    margin = "m-4",
    colors: colorsProp,
    header,
    footer,
    ios,
    material,
    headerFontSizeIos = "text-[17px]",
    headerFontSizeMaterial = "text-[22px]",
    contentWrap = true,
    contentWrapPadding = "p-4",
    // Style
    raised,
    raisedIos,
    raisedMaterial,
    outline,
    outlineIos,
    outlineMaterial,
    headerDivider = false,
    footerDivider = false,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react25.useRef)(null);
  (0, import_react25.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme();
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = CardColors(colorsProp, dark);
  const isOutline = typeof outline === "undefined" ? theme === "ios" ? outlineIos : outlineMaterial : outline;
  const isRaised = typeof raised === "undefined" ? theme === "ios" ? raisedIos : raisedMaterial : raised;
  const style = isOutline ? "outline" : isRaised ? "raised" : "plain";
  const c = themeClasses2(CardClasses({
    ...props,
    margin,
    contentWrapPadding,
    headerDivider,
    footerDivider,
    headerFontSizeIos,
    headerFontSizeMaterial,
    outline: isOutline,
    raised: isRaised
  }, colors, dark), className);
  return import_react25.default.createElement(Component, _extends17({
    ref: elRef,
    className: c.base[style]
  }, attrs), header && import_react25.default.createElement("div", {
    className: c.header
  }, header), contentWrap ? import_react25.default.createElement("div", {
    className: c.content
  }, children) : children, footer && import_react25.default.createElement("div", {
    className: c.footer
  }, footer));
});
Card.displayName = "Card";
var Card_default = Card;

// node_modules/konsta/react/esm/components/Checkbox.js
var import_react27 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/CheckboxClasses.js
var CheckboxClasses = (props, colors, classes, darkClasses) => {
  return {
    base: cls(`cursor-pointer inline-flex align-middle`, positionClass("relative", classes), darkClasses("dark:touch-ripple-white")),
    iconWrap: {
      common: cls(`flex items-center justify-center text-white`, darkClasses("dark:text-black")),
      ios: "w-5.5 h-5.5 rounded-full border",
      material: "w-4.5 h-4.5 rounded-sm border-2",
      notChecked: {
        ios: colors.borderIos,
        material: colors.borderMaterial
      },
      checked: {
        ios: `${colors.bgCheckedIos} ${colors.borderCheckedIos}`,
        material: `${colors.bgCheckedMaterial} ${colors.borderCheckedMaterial}`
      }
    },
    icon: {
      notChecked: "opacity-0",
      checked: "opacity-100"
    },
    indeterminateIcon: {
      common: cls(`bg-white w-3/4`, darkClasses("dark:bg-black")),
      ios: "h-0.5 rounded-full",
      material: "h-0.5"
    },
    input: "hidden"
  };
};

// node_modules/konsta/shared/esm/colors/CheckboxColors.js
var CheckboxColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    borderIos: cls(`border-black border-opacity-30`, dark("dark:border-white dark:border-opacity-30")),
    borderMaterial: cls(`border-md-light-outline`, dark("dark:border-md-dark-outline")),
    bgCheckedIos: "bg-primary",
    bgCheckedMaterial: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary")),
    borderCheckedIos: "border-primary",
    borderCheckedMaterial: cls("border-md-light-primary", dark("dark:border-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/icons/CheckboxIcon.js
var import_react26 = __toESM(require_react(), 1);
function _extends18() {
  _extends18 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends18.apply(this, arguments);
}
var CheckboxIcon = (props) => {
  const {
    ios,
    material,
    fill,
    ...rest
  } = props;
  const theme = useTheme({
    ios,
    material
  });
  return theme === "ios" ? import_react26.default.createElement("svg", _extends18({
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "currentcolor"
  }, rest), import_react26.default.createElement("path", {
    fill: fill || "currentColor",
    fillRule: "evenodd",
    d: "M10.6461792,0.119820016 C11.0022676,0.346673312 11.1070333,0.819240884 10.88018,1.17532923 L5.59004012,9.47918548 C5.44456028,9.70754308 5.19802823,9.83254199 4.94596825,9.83309245 C4.59813173,9.83364386 4.39457446,9.67360825 4.28105047,9.53831563 L1.17887189,5.84128316 C0.907480501,5.5178515 0.949667479,5.03565214 1.27309914,4.76426075 C1.59653081,4.49286936 2.07873017,4.53505633 2.35012156,4.858488 L4.8346263,7.81909046 L9.59067001,0.353820775 C9.81752331,-0.00226757161 10.2900909,-0.10703328 10.6461792,0.119820016 Z",
    transform: "translate(4 5.483)"
  })) : import_react26.default.createElement("svg", _extends18({
    xmlns: "http://www.w3.org/2000/svg",
    width: "14",
    height: "14",
    viewBox: "0 0 18 14",
    fill: "currentcolor"
  }, rest), import_react26.default.createElement("polygon", {
    fill,
    points: "6 11.17 1.83 7 .41 8.41 6 14 18 2 16.59 .59"
  }));
};
var CheckboxIcon_default = CheckboxIcon;

// node_modules/konsta/react/esm/components/Checkbox.js
function _extends19() {
  _extends19 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends19.apply(this, arguments);
}
var Checkbox = (0, import_react27.forwardRef)((props, ref) => {
  const {
    component = "label",
    className,
    colors: colorsProp,
    defaultChecked,
    checked,
    indeterminate,
    name,
    value,
    disabled,
    readOnly,
    onChange,
    ios,
    material,
    touchRipple = true,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const inputElRef = (0, import_react27.useRef)(null);
  const elRef = (0, import_react27.useRef)(null);
  (0, import_react27.useImperativeHandle)(ref, () => ({
    el: elRef.current,
    inputEl: inputElRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  useTouchRipple(elRef, theme === "material" && touchRipple);
  const colors = CheckboxColors(colorsProp, dark);
  const state = checked || defaultChecked && !onChange || indeterminate ? "checked" : "notChecked";
  const c = themeClasses2(CheckboxClasses(props, colors, className, dark), className);
  (0, import_react27.useEffect)(() => {
    if (inputElRef.current) {
      inputElRef.current.indeterminate = !!indeterminate;
    }
  }, [indeterminate]);
  return import_react27.default.createElement(Component, _extends19({
    ref: elRef,
    className: c.base
  }, attrs), import_react27.default.createElement("input", {
    ref: inputElRef,
    type: "checkbox",
    name,
    value,
    disabled,
    readOnly,
    checked,
    defaultChecked,
    onChange,
    className: c.input
  }), import_react27.default.createElement("i", {
    className: c.iconWrap[state]
  }, indeterminate ? import_react27.default.createElement("span", {
    className: c.indeterminateIcon
  }) : import_react27.default.createElement(CheckboxIcon_default, {
    ios,
    material,
    className: c.icon[state]
  })), children);
});
Checkbox.displayName = "Checkbox";
var Checkbox_default = Checkbox;

// node_modules/konsta/react/esm/components/Chip.js
var import_react29 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ChipClasses.js
var ChipClasses = (props, colors) => {
  return {
    base: {
      common: `text-sm inline-flex items-center justify-center align-middle rounded-full px-3`,
      ios: "rounded-full h-7",
      material: "rounded-lg h-8 font-medium",
      fill: {
        ios: cls(colors.fillBg || colors.fillBgIos, colors.fillText || colors.fillTextIos),
        material: cls(colors.fillBg || colors.fillBgMaterial, colors.fillText || colors.fillTextMaterial)
      },
      outline: {
        common: `border`,
        ios: cls(colors.outlineText || colors.outlineTextIos, colors.outlineBorder || colors.outlineBorderIos),
        material: cls(colors.outlineText || colors.outlineTextMaterial, colors.outlineBorder || colors.outlineBorderMaterial)
      }
    },
    media: {
      common: "-my-1 me-1 select-none",
      ios: "-ms-3",
      material: "-ms-2"
    },
    deleteButton: "-me-2 -my-1 ms-1 h-full flex items-center justify-center w-6 cursor-pointer opacity-50 active:opacity-100 select-none"
  };
};

// node_modules/konsta/shared/esm/colors/ChipColors.js
var ChipColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    fillTextIos: "text-current",
    fillTextMaterial: cls("text-md-light-on-secondary-container", dark("dark:text-md-dark-on-secondary-container")),
    fillBgIos: cls(`bg-black bg-opacity-10`, dark("dark:bg-white dark:bg-opacity-10")),
    fillBgMaterial: cls("bg-md-light-secondary-container", dark("dark:bg-md-dark-secondary-container")),
    outlineTextIos: cls("text-current"),
    outlineTextMaterial: cls("text-md-light-on-surface", dark("dark:text-md-dark-on-surface")),
    outlineBorderIos: cls(`border-black border-opacity-20`, dark("dark:border-white dark:border-opacity-20")),
    outlineBorderMaterial: cls(`border-md-light-outline`, dark("dark:border-md-dark-outline")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/icons/DeleteIcon.js
var import_react28 = __toESM(require_react(), 1);
function _extends20() {
  _extends20 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends20.apply(this, arguments);
}
var DeleteIcon = (_ref) => {
  let {
    theme,
    ...rest
  } = _ref;
  return theme === "ios" ? import_react28.default.createElement("svg", _extends20({
    xmlns: "http://www.w3.org/2000/svg",
    width: "28",
    height: "28",
    viewBox: "0 0 28 28",
    fill: "currentcolor"
  }, rest), import_react28.default.createElement("path", {
    d: "M14,0 C21.7319865,0 28,6.2680135 28,14 C28,21.7319865 21.7319865,28 14,28 C6.2680135,28 0,21.7319865 0,14 C0,6.2680135 6.2680135,0 14,0 Z M18.9393398,6.93933983 L14,11.8786797 L9.06066017,6.93933983 L6.93933983,9.06066017 L11.8786797,14 L6.93933983,18.9393398 L9.06066017,21.0606602 L14,16.1213203 L18.9393398,21.0606602 L21.0606602,18.9393398 L16.1213203,14 L21.0606602,9.06066017 L18.9393398,6.93933983 Z"
  })) : import_react28.default.createElement("svg", _extends20({
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, rest), import_react28.default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 2C6.47 2 2 6.47 2 12C2 17.53 6.47 22 12 22C17.53 22 22 17.53 22 12C22 6.47 17.53 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20ZM12 10.59L15.59 7L17 8.41L13.41 12L17 15.59L15.59 17L12 13.41L8.41 17L7 15.59L10.59 12L7 8.41L8.41 7L12 10.59Z",
    fill: "currentcolor"
  }));
};
var DeleteIcon_default = DeleteIcon;

// node_modules/konsta/react/esm/components/Chip.js
function _extends21() {
  _extends21 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends21.apply(this, arguments);
}
var Chip = (0, import_react29.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    media,
    deleteButton,
    onDelete,
    ios,
    material,
    // Style
    outline,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react29.useRef)(null);
  (0, import_react29.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const theme = useTheme({
    ios,
    material
  });
  const dark = useDarkClasses();
  const style = outline ? "outline" : "fill";
  const colors = ChipColors(colorsProp, dark);
  const c = themeClasses2(ChipClasses(props, colors), className);
  return import_react29.default.createElement(Component, _extends21({
    ref: elRef,
    className: c.base[style]
  }, attrs), media && import_react29.default.createElement("div", {
    className: c.media
  }, media), children, deleteButton && import_react29.default.createElement("div", {
    className: c.deleteButton,
    role: "button",
    tabIndex: "0",
    onClick: onDelete
  }, import_react29.default.createElement(DeleteIcon_default, {
    theme,
    className: "h-4 w-4"
  })));
});
Chip.displayName = "Chip";
var Chip_default = Chip;

// node_modules/konsta/react/esm/components/Dialog.js
var import_react30 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/DialogClasses.js
var DialogClasses = (props, colors, classes, _ref) => {
  let {
    hasButtons
  } = _ref;
  const {
    titleFontSizeMaterial,
    titleFontSizeIos,
    translucent,
    sizeIos,
    sizeMaterial
  } = props;
  return {
    base: {
      common: cls("left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 z-40 max-h-full overflow-hidden duration-400", positionClass("fixed", classes)),
      ios: cls("rounded-xl max-w-full", sizeIos, colors.bgIos, translucent && "translucent"),
      material: cls("rounded-[1.75rem] p-6 max-w-[90%]", sizeMaterial, colors.bgMaterial),
      opened: "",
      closed: "scale-[0.85] opacity-0 pointer-events-none"
    },
    contentWrap: {
      common: "flex flex-col items-center justify-center",
      material: "space-y-3",
      ios: cls("p-4 space-y-1 relative", hasButtons && "hairline-b")
    },
    title: {
      common: cls("w-full"),
      ios: cls(colors.titleIos, titleFontSizeIos, "font-semibold text-center"),
      material: cls(colors.titleMaterial, titleFontSizeMaterial)
    },
    content: {
      common: cls("text-sm w-full"),
      ios: cls(colors.contentTextIos, "text-center"),
      material: cls(colors.contentTextMaterial)
    },
    buttons: {
      common: "flex items-center",
      ios: cls("justify-center last-child-hairline-r-none"),
      material: cls("justify-end pt-6 space-x-2 rtl:space-x-reverse")
    },
    backdrop: {
      common: "fixed z-40 w-full h-full left-0 top-0 bg-black bg-opacity-50 duration-400",
      opened: "",
      closed: "opacity-0 pointer-events-none"
    }
  };
};

// node_modules/konsta/shared/esm/colors/DialogColors.js
var DialogColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("bg-white", dark("dark:bg-neutral-800")),
    bgMaterial: cls("bg-md-light-surface-3", dark("dark:bg-md-dark-surface-3")),
    titleIos: "",
    titleMaterial: cls("text-md-light-on-surface", dark("dark:text-md-dark-on-surface")),
    contentTextIos: "",
    contentTextMaterial: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Dialog.js
function _extends22() {
  _extends22 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends22.apply(this, arguments);
}
var Dialog = (0, import_react30.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    opened,
    backdrop = true,
    onBackdropClick,
    translucent = true,
    sizeIos = "w-[16.875rem]",
    sizeMaterial = "w-[19.5rem]",
    titleFontSizeIos = "text-[18px]",
    titleFontSizeMaterial = "text-[24px]",
    title,
    content,
    buttons,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react30.useRef)(null);
  (0, import_react30.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const state = opened ? "opened" : "closed";
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = DialogColors(colorsProp, dark);
  const c = themeClasses2(DialogClasses({
    ...props,
    titleFontSizeIos,
    titleFontSizeMaterial,
    translucent,
    sizeIos,
    sizeMaterial
  }, colors, className, {
    hasButtons: !!buttons
  }), className);
  return import_react30.default.createElement(import_react30.default.Fragment, null, backdrop && import_react30.default.createElement("div", {
    className: c.backdrop[state],
    onClick: onBackdropClick
  }), import_react30.default.createElement(Component, _extends22({
    ref: elRef,
    className: c.base[state]
  }, attrs), import_react30.default.createElement("div", {
    className: c.contentWrap
  }, title && import_react30.default.createElement("div", {
    className: c.title
  }, title), (content || children) && import_react30.default.createElement("div", {
    className: c.content
  }, content, children)), buttons && import_react30.default.createElement("div", {
    className: c.buttons
  }, buttons)));
});
Dialog.displayName = "Dialog";
var Dialog_default = Dialog;

// node_modules/konsta/react/esm/components/DialogButton.js
var import_react31 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/DialogButtonClasses.js
var DialogButtonClasses = (props, colors) => {
  const {
    strong,
    disabled
  } = props;
  return {
    base: {
      ios: cls("text-center text-[17px] flex items-center justify-center h-11 w-full hairline-r rtl:hairline-l relative first:rounded-bl-xl last:rounded-br-xl rtl:first:rounded-br-xl rtl:first:rounded-bl-none rtl:last:rounded-bl-xl rtl:last:rounded-br-none", disabled ? colors.disabledTextIos : colors.textIos, strong && "font-semibold", !disabled && colors.activeBgIos)
    }
  };
};

// node_modules/konsta/shared/esm/colors/DialogButtonColors.js
var DialogButtonColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    activeBgIos: cls("active:bg-black active:bg-opacity-10", dark("dark:active:bg-white dark:active:bg-opacity-10")),
    textIos: "text-primary",
    disabledTextIos: cls("text-black text-opacity-30", dark("dark:text-white dark:text-opacity-30")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/DialogButton.js
function _extends23() {
  _extends23 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends23.apply(this, arguments);
}
var DialogButton = (0, import_react31.forwardRef)((props, ref) => {
  const {
    component = "button",
    className,
    colors: colorsProp,
    ios,
    material,
    disabled,
    strong,
    strongIos,
    strongMaterial,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react31.useRef)(null);
  (0, import_react31.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = DialogButtonColors(colorsProp, dark);
  const isStrong = typeof strong === "undefined" ? theme === "ios" ? strongIos : strongMaterial : strong;
  const c = themeClasses2(DialogButtonClasses({
    ...props,
    strong: isStrong
  }, colors, dark), className);
  const Component = component;
  if (theme === "ios")
    return import_react31.default.createElement(Component, _extends23({
      className: c.base,
      disabled,
      role: "button",
      tabIndex: "0"
    }, attrs), children);
  return import_react31.default.createElement(Button_default, _extends23({
    component,
    inline: true,
    rounded: true,
    disabled,
    clear: !isStrong,
    className
  }, attrs), children);
});
DialogButton.displayName = "DialogButton";
var DialogButton_default = DialogButton;

// node_modules/konsta/react/esm/components/Fab.js
var import_react32 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/FabClasses.js
var FabClasses = (props, colors) => {
  return {
    base: {
      common: `flex items-center justify-center space-x-2 rtl:!space-x-reverse cursor-pointer overflow-hidden select-none`,
      ios: `h-12 duration-100 rounded-full shadow-lg ${colors.bgIos} ${colors.activeBgIos} ${colors.textIos}`,
      material: `duration-300 rounded-2xl shadow ${colors.bgMaterial} ${colors.activeBgMaterial} ${colors.textMaterial} ${colors.touchRipple}`,
      iconOnly: {
        ios: "w-12",
        material: "w-14 h-14"
      },
      withText: {
        common: "px-4",
        material: "h-14"
      }
    },
    text: {
      common: "text-sm",
      ios: "font-semibold uppercase",
      material: "font-medium"
    },
    icon: {
      common: "h-1em w-1em",
      ios: "text-icon-ios",
      material: "text-icon-material"
    }
  };
};

// node_modules/konsta/shared/esm/colors/FabColors.js
var FabColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: "bg-primary",
    bgMaterial: cls("bg-md-light-primary-container", dark("dark:bg-md-dark-primary-container")),
    activeBgIos: "active:bg-ios-primary-shade",
    activeBgMaterial: "",
    textIos: "text-white",
    textMaterial: cls("text-md-light-on-primary-container", dark("dark:text-md-dark-on-primary-container")),
    touchRipple: cls("touch-ripple-primary", dark("dark:touch-ripple-white")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Fab.js
function _extends24() {
  _extends24 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends24.apply(this, arguments);
}
var Fab = (0, import_react32.forwardRef)((props, ref) => {
  const {
    component = "a",
    className,
    colors: colorsProp,
    href,
    text,
    textPosition = "after",
    icon,
    ios,
    material,
    touchRipple = true,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const rippleElRef = (0, import_react32.useRef)(null);
  (0, import_react32.useImperativeHandle)(ref, () => ({
    el: rippleElRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  useTouchRipple(rippleElRef, theme === "material" && touchRipple);
  const colors = FabColors(colorsProp, dark);
  const c = themeClasses2(FabClasses(props, colors), className);
  return import_react32.default.createElement(Component, _extends24({
    className: text ? c.base.withText : c.base.iconOnly,
    href,
    ref: rippleElRef,
    role: "button",
    tabIndex: "0"
  }, attrs), text && textPosition === "before" && import_react32.default.createElement("span", {
    className: c.text
  }, text), icon && import_react32.default.createElement("span", {
    className: c.icon
  }, icon), text && textPosition === "after" && import_react32.default.createElement("span", {
    className: c.text
  }, text), children);
});
Fab.displayName = "Fab";
var Fab_default = Fab;

// node_modules/konsta/react/esm/components/Icon.js
var import_react33 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/IconClasses.js
var IconClasses = (props, classes) => {
  return {
    base: `${positionClass("relative", classes)} inline-block not-italic`,
    badge: "absolute -end-1.5 -top-0.5"
  };
};

// node_modules/konsta/react/esm/components/Icon.js
function _extends25() {
  _extends25 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends25.apply(this, arguments);
}
var Icon = (0, import_react33.forwardRef)((props, ref) => {
  const {
    component = "i",
    className,
    ios,
    material,
    badge,
    badgeColors,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react33.useRef)(null);
  (0, import_react33.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses();
  const theme = useTheme();
  const c = themeClasses2(IconClasses(props, className), className);
  return import_react33.default.createElement(Component, _extends25({
    ref: elRef,
    className: c.base
  }, attrs), theme === "ios" ? ios : material, typeof badge !== "undefined" && badge !== null && import_react33.default.createElement(Badge_default, {
    small: true,
    className: c.badge,
    colors: badgeColors
  }, badge), children);
});
Icon.displayName = "Icon";
var Icon_default = Icon;

// node_modules/konsta/react/esm/components/Link.js
var import_react34 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/LinkClasses.js
var LinkClasses = (props, _ref, classes) => {
  let {
    textColor,
    needsTouchRipple
  } = _ref;
  const {
    iconOnly,
    tabbar
  } = props;
  return {
    base: {
      common: cls(!tabbar && textColor, `inline-flex space-x-1 rtl:!space-x-reverse justify-center items-center cursor-pointer select-none`, needsTouchRipple && `touch-ripple-primary ${positionClass("relative", classes)} z-10`),
      notTabbar: {
        ios: `active:opacity-30 duration-300 active:duration-0`,
        material: needsTouchRipple ? "" : `active:opacity-55`
      }
    },
    tabbar: {
      common: cls(positionClass("relative", classes), `w-full h-full duration-300`),
      material: "font-medium text-sm z-10",
      active: "k-tabbar-link-active",
      inactive: ""
    },
    toolbar: {
      common: cls(`h-full max-h-12`, iconOnly && "k-touch-ripple-inset"),
      material: "px-3 text-sm font-medium"
    },
    navbar: {
      common: cls(`h-full max-h-12`, iconOnly && "k-touch-ripple-inset"),
      material: "px-3"
    }
  };
};

// node_modules/konsta/shared/esm/colors/LinkColors.js
var LinkColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    textIos: "text-primary",
    textMaterial: cls("text-md-light-primary", dark("dark:text-md-dark-primary")),
    navbarTextIos: "text-primary",
    navbarTextMaterial: "",
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Link.js
function _extends26() {
  _extends26 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends26.apply(this, arguments);
}
var Link = (0, import_react34.forwardRef)((props, ref) => {
  const {
    component = "a",
    className,
    colors: colorsProp,
    // Toolbar/navbar link
    navbar,
    toolbar,
    iconOnly,
    linkProps = {},
    tabbar,
    tabbarActive,
    touchRipple = void 0,
    ios,
    material,
    onClick,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const rippleElRef = (0, import_react34.useRef)(null);
  (0, import_react34.useImperativeHandle)(ref, () => ({
    el: rippleElRef.current
  }));
  const Component = component;
  const attrs = {
    ...linkProps,
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const needsTouchRipple = theme === "material" && (touchRipple || (toolbar || tabbar || navbar) && typeof touchRipple === "undefined");
  useTouchRipple(rippleElRef, needsTouchRipple);
  const colors = LinkColors(colorsProp, dark);
  const themeTextColor = props.navbar ? theme === "material" ? colors.navbarTextMaterial : colors.navbarTextIos : theme === "material" ? colors.textMaterial : colors.textIos;
  const textColor = tabbar && !tabbarActive ? colors.tabbarInactive : themeTextColor;
  const tabbarState = tabbarActive ? "active" : "inactive";
  const c = themeClasses2(LinkClasses(props, {
    textColor,
    needsTouchRipple
  }, className));
  const classes = cls(
    // base
    c.base[tabbar ? "default" : "notTabbar"],
    toolbar && c.toolbar,
    navbar && c.navbar,
    tabbar && c.tabbar[tabbarState],
    className
  );
  return import_react34.default.createElement(Component, _extends26({
    ref: rippleElRef,
    className: classes
  }, attrs, {
    role: "link",
    tabIndex: "0",
    onClick
  }), children);
});
Link.displayName = "Link";
var Link_default = Link;

// node_modules/konsta/react/esm/components/List.js
var import_react36 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ListClasses.js
var ListClasses = (props, colors, classes) => {
  const {
    nested,
    margin,
    inset,
    strong,
    outline
  } = props;
  return {
    base: {
      common: cls(!nested && margin, !inset && !nested && outline && "hairline-t hairline-b", inset && outline && "border", positionClass("relative", classes), "z-10"),
      ios: cls(strong && colors.strongBgIos, inset && outline && colors.outlineIos),
      material: cls(strong && colors.strongBgMaterial, inset && outline && colors.outlineMaterial)
    },
    ul: {
      common: cls(inset && "no-safe-areas", "last-child-hairline-b-none")
    },
    inset: {
      common: `ml-4-safe mr-4-safe overflow-hidden`,
      ios: `rounded-lg`,
      material: `rounded-2xl`
    },
    menuList: {
      common: "py-1"
    }
  };
};

// node_modules/konsta/shared/esm/colors/ListColors.js
var ListColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    outlineIos: cls("border-black border-opacity-20", dark("dark:border-white dark:border-opacity-15")),
    outlineMaterial: cls("border-md-light-outline", dark("border-md-dark-outline")),
    strongBgIos: cls(`bg-ios-light-surface-1`, dark("dark:bg-ios-dark-surface-1")),
    strongBgMaterial: cls("bg-md-light-surface-1", dark("dark:bg-md-dark-surface-1")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/shared/ListDividersContext.js
var import_react35 = __toESM(require_react(), 1);
var ListDividersContext = import_react35.default.createContext(false);

// node_modules/konsta/react/esm/components/List.js
function _extends27() {
  _extends27 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends27.apply(this, arguments);
}
var List = (0, import_react36.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    margin = "my-8",
    nested,
    menuList,
    dividers,
    dividersIos = true,
    dividersMaterial = false,
    inset,
    insetIos,
    insetMaterial,
    strong,
    strongIos,
    strongMaterial,
    outline,
    outlineIos,
    outlineMaterial,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react36.useRef)(null);
  (0, import_react36.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme();
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const hasDividers = typeof dividers === "undefined" ? theme === "ios" ? dividersIos : dividersMaterial : dividers;
  const isStrong = typeof strong === "undefined" ? theme === "ios" ? strongIos : strongMaterial : strong;
  const isOutline = typeof outline === "undefined" ? theme === "ios" ? outlineIos : outlineMaterial : outline;
  const isInset = typeof inset === "undefined" ? theme === "ios" ? insetIos : insetMaterial : inset;
  const colors = ListColors(colorsProp, dark);
  const c = themeClasses2(ListClasses({
    ...props,
    margin,
    inset: isInset,
    strong: isStrong,
    outline: isOutline
  }, colors, className));
  const classes = cls(c.base, isInset && c.inset, menuList && c.menuList, className);
  return import_react36.default.createElement(ListDividersContext.Provider, {
    value: hasDividers
  }, import_react36.default.createElement(Component, _extends27({
    ref: elRef,
    className: classes
  }, attrs), import_react36.default.createElement("ul", {
    className: c.ul
  }, children)));
});
List.displayName = "List";
var List_default = List;

// node_modules/konsta/react/esm/components/ListGroup.js
var import_react37 = __toESM(require_react(), 1);
function _extends28() {
  _extends28 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends28.apply(this, arguments);
}
var ListGroup = (0, import_react37.forwardRef)((props, ref) => {
  const {
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react37.useRef)(null);
  (0, import_react37.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const attrs = {
    ...rest
  };
  return import_react37.default.createElement("li", {
    ref: elRef
  }, import_react37.default.createElement(List_default, _extends28({
    nested: true
  }, attrs), children));
});
ListGroup.displayName = "ListGroup";
var ListGroup_default = ListGroup;

// node_modules/konsta/react/esm/components/ListButton.js
var import_react39 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ListButtonClasses.js
var ListButtonClasses = (props, colors, classes) => {
  const {
    dividers
  } = props;
  return {
    base: ``,
    button: {
      common: cls(positionClass("relative", classes), dividers && "hairline-b active:hairline-transparent", `flex items-center justify-center px-4 space-x-1 w-full duration-300 active:duration-0 focus:outline-none ${colors.touchRipple} overflow-hidden select-none`),
      ios: cls("h-11", colors.textIos, colors.activeBgIos, colors.activeBgIos),
      material: cls("h-12", colors.textMaterial, colors.activeBgMaterial)
    }
  };
};

// node_modules/konsta/shared/esm/colors/ListButtonColors.js
var ListButtonColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    textIos: "text-primary",
    textMaterial: cls("text-md-light-primary", dark("dark:text-md-dark-primary")),
    activeBgIos: "active:bg-primary active:bg-opacity-15",
    activeBgMaterial: "",
    touchRipple: "touch-ripple-primary",
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/shared/use-list-dividers.js
var import_react38 = __toESM(require_react(), 1);
var useListDividers = () => {
  return (0, import_react38.useContext)(ListDividersContext);
};

// node_modules/konsta/react/esm/components/ListButton.js
function _extends29() {
  _extends29 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends29.apply(this, arguments);
}
var ListButton = (0, import_react39.forwardRef)((props, ref) => {
  const {
    component = "li",
    className,
    colors: colorsProp,
    // Link props
    href,
    target,
    // Button props
    type,
    value,
    linkComponent = "a",
    linkProps = {},
    ios,
    material,
    touchRipple = true,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react39.useRef)(null);
  const rippleElRef = (0, import_react39.useRef)(null);
  const dividers = useListDividers();
  (0, import_react39.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  useTouchRipple(rippleElRef, theme === "material" && touchRipple);
  const dark = useDarkClasses();
  const colors = ListButtonColors(colorsProp, dark);
  const c = themeClasses2(ListButtonClasses({
    ...props,
    dividers
  }, colors, className, theme), className);
  const isLink = !!href || href === "";
  const hrefComputed = !isLink || href === true || href === false ? void 0 : href || "";
  const buttonAttrs = {
    href: hrefComputed,
    target,
    type,
    value,
    ...linkProps
  };
  const ButtonComponent = isLink ? linkComponent : "button";
  return import_react39.default.createElement(Component, _extends29({
    ref: elRef,
    className: c.base
  }, attrs), import_react39.default.createElement(ButtonComponent, _extends29({
    ref: rippleElRef,
    className: c.button
  }, buttonAttrs), children));
});
ListButton.displayName = "ListButton";
var ListButton_default = ListButton;

// node_modules/konsta/react/esm/components/ListItem.js
var import_react40 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ListItemClasses.js
var ListItemClasses = (props, colors, _ref) => {
  let {
    className,
    isMediaItem,
    theme,
    textColor,
    needsTouchRipple,
    isMenuListItemActive,
    autoStrongTitle
  } = _ref;
  const {
    menuListItem,
    dividers,
    mediaClassName = "",
    mediaClass = "",
    innerClassName = "",
    innerClass = "",
    contentClassName = "",
    contentClass = "",
    titleWrapClassName = "",
    titleWrapClass = "",
    titleFontSizeIos,
    titleFontSizeMaterial,
    strongTitle,
    contacts
  } = props;
  return {
    base: {
      common: menuListItem ? `${textColor} py-1` : "",
      material: contacts && "[&:nth-child(2)]:-mt-12"
    },
    itemContent: {
      common: cls(`flex items-center ${contentClassName || contentClass}`),
      ios: cls(!menuListItem && cls(colors.primaryTextIos, "ps-4-safe"), menuListItem && "rounded-lg ml-2-safe mr-2-safe ps-2"),
      material: cls(!menuListItem && cls(colors.primaryTextMaterial, isMediaItem ? "ml-2-safe mr-2-safe rounded-2xl ps-2" : "ps-4-safe", contacts && "ml-10"), menuListItem && "rounded-full min-h-[3.5rem] ml-4-safe mr-4-safe ps-4"),
      link: cls("duration-300 active:duration-0 cursor-pointer select-none", dividers && theme === "ios" && "active:hairline-transparent", needsTouchRipple && cls(`relative overflow-hidden z-10`, colors.touchRipple), isMenuListItemActive ? cls(theme === "ios" ? colors.menuListItemActiveBgIos : colors.menuListItemActiveBgMaterial) : menuListItem ? cls(theme === "ios" ? colors.menuListItemBgIos : colors.menuListItemBgMaterial) : cls(theme === "ios" ? colors.activeBgIos : colors.activeBgMaterial))
    },
    media: {
      common: `shrink-0 flex ${mediaClassName || mediaClass}`,
      ios: "py-2 me-4",
      material: cls("py-3", menuListItem ? "me-3" : "me-4")
    },
    inner: {
      common: cls("w-full relative", !menuListItem && dividers && "hairline-b", innerClassName || innerClass),
      ios: "py-2.5 pe-4-safe",
      material: cls("py-3", isMediaItem && !menuListItem ? "pe-2" : "pe-4-safe")
    },
    titleWrap: {
      common: cls(`flex justify-between items-center ${titleWrapClassName || titleWrapClass}`),
      ios: cls(!menuListItem && titleFontSizeIos),
      material: cls(!menuListItem && titleFontSizeMaterial)
    },
    title: {
      common: `shrink`,
      menuListItem: cls("text-sm", strongTitle === true || autoStrongTitle ? "font-semibold" : "font-medium"),
      strong: {
        common: "",
        ios: "font-semibold",
        material: "font-medium"
      }
    },
    after: {
      common: cls(`shrink-0 ms-auto ps-1 flex items-center space-x-1`),
      ios: colors.secondaryTextIos,
      material: cls(colors.secondaryTextMaterial, "text-sm")
    },
    chevron: "opacity-20 shrink-0 ms-3 rtl:rotate-180",
    subtitle: "text-sm",
    text: {
      common: cls(`text-sm line-clamp-2`),
      ios: colors.secondaryTextIos,
      material: colors.secondaryTextMaterial
    },
    header: {
      common: "text-xs mb-0.5",
      ios: colors.secondaryTextIos,
      material: colors.secondaryTextMaterial
    },
    footer: {
      common: cls(`text-xs mt-0.5`),
      ios: colors.secondaryTextIos,
      material: colors.secondaryTextMaterial
    },
    groupTitle: {
      common: cls(
        `pl-4-safe pr-4-safe py-1 flex items-center z-20`,
        positionClass("relative", className)
        // divider ? 'relative' : 'sticky top-0'
      ),
      ios: `h-8${dividers ? " hairline-t" : ""} -mt-px ${titleFontSizeIos} ${colors.secondaryTextIos} ${colors.groupTitleBgIos} ${contacts && cls("font-semibold top-11-safe sticky", colors.groupTitleContactsTextIos, colors.groupTitleContactsBgIos)}`,
      material: `h-12 ${titleFontSizeMaterial} ${colors.secondaryTextMaterial} ${colors.groupTitleBgMaterial} ${contacts && cls("pointer-events-none overflow-visible h-12 box-border text-xl font-medium flex max-w-full items-center px-4 top-16-safe sticky", colors.groupTitleContactsTextMaterial, colors.groupTitleContactsBgMaterial)}`
    }
  };
};

// node_modules/konsta/shared/esm/colors/ListItemColors.js
var ListItemColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    primaryTextIos: cls(`text-black`, dark("dark:text-white")),
    primaryTextMaterial: cls(`text-md-light-on-surface`, dark("dark:text-md-dark-on-surface")),
    secondaryTextIos: cls("text-black text-opacity-55", dark("dark:text-white dark:text-opacity-55")),
    secondaryTextMaterial: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    activeBgIos: cls(`active:bg-black active:bg-opacity-10`, dark("dark:active:bg-white dark:active:bg-opacity-10")),
    activeBgMaterial: "",
    groupTitleBgIos: cls("bg-ios-light-surface-variant", dark("dark:bg-ios-dark-surface-variant")),
    groupTitleBgMaterial: cls("bg-md-light-surface-2", dark("dark:bg-md-dark-surface-2")),
    menuListItemTextIos: cls(`text-black`, dark("dark:text-white")),
    menuListItemTextMaterial: cls(`text-md-light-on-surface-variant`, dark("dark:text-md-dark-on-surface-variant")),
    menuListItemBgIos: cls(`active:bg-black active:bg-opacity-10`, dark("dark:active:bg-white dark:active:bg-opacity-10")),
    menuListItemBgMaterial: cls("bg-md-light-surface-1", dark("dark:bg-md-dark-surface-1")),
    menuListItemActiveTextIos: cls(`text-primary`, dark("dark:text-white")),
    menuListItemActiveTextMaterial: cls(`text-md-light-on-secondary-container`, dark("dark:text-md-dark-on-secondary-container")),
    menuListItemActiveBgIos: cls(`bg-primary bg-opacity-15`, dark("dark:bg-primary")),
    menuListItemActiveBgMaterial: cls(`bg-md-light-secondary-container`, dark("dark:bg-md-dark-secondary-container")),
    touchRipple: cls("touch-ripple-black", dark("dark:touch-ripple-white")),
    groupTitleContactsTextIos: cls("text-opacity-90", dark("dark:text-opacity-90")),
    groupTitleContactsTextMaterial: cls("text-md-light-primary", dark("dark:text-md-dark-primary")),
    groupTitleContactsBgIos: cls(dark("dark:bg-[#323234]")),
    groupTitleContactsBgMaterial: cls("bg-transparent", dark("dark:bg-transparent")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/ListItem.js
function _extends30() {
  _extends30 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends30.apply(this, arguments);
}
var ListItem = (0, import_react40.forwardRef)((props, ref) => {
  const {
    component = "li",
    colors: colorsProp,
    className,
    mediaClassName = "",
    innerClassName = "",
    innerChildren,
    contentClassName = "",
    contentChildren,
    titleWrapClassName = "",
    titleFontSizeIos = "text-[17px]",
    titleFontSizeMaterial = "text-[16px]",
    // Content props
    title,
    subtitle,
    text,
    after,
    media,
    header,
    footer,
    menuListItem,
    menuListItemActive,
    groupTitle,
    // Title
    strongTitle = "auto",
    // Label props
    label,
    // Link props
    chevron = void 0,
    chevronIos = true,
    chevronMaterial = true,
    chevronIcon,
    href,
    target,
    link,
    linkComponent = "a",
    linkProps = {},
    dividers: dividersProp,
    contacts,
    ios,
    material,
    touchRipple = true,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const rippleElRef = (0, import_react40.useRef)(null);
  const elRef = (0, import_react40.useRef)(null);
  (0, import_react40.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const dividers = typeof dividersProp === "undefined" ? useListDividers() : dividersProp;
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const hasChevron = typeof chevron === "undefined" ? theme === "ios" ? chevronIos : chevronMaterial : chevron;
  const colors = ListItemColors(colorsProp, dark);
  const isMenuListItemActive = menuListItem && menuListItemActive;
  const textColor = colors[`${isMenuListItemActive ? "menuListItemActiveText" : menuListItem ? "menuListItemText" : "text"}${theme === "ios" ? "Ios" : "Material"}`];
  const isLink = !!href || href === "" || menuListItem || link;
  const isLabel = !!label;
  const needsTouchRipple = theme === "material" && (isLabel || isLink) && touchRipple;
  useTouchRipple(rippleElRef, needsTouchRipple);
  const hrefComputed = href === true || href === false || typeof href === "undefined" ? void 0 : href || "";
  const ItemContentComponent = isLink ? linkComponent : isLabel ? "label" : "div";
  const linkPropsComputed = isLink ? {
    href: hrefComputed,
    target,
    ...linkProps
  } : {};
  const isMediaItem = title && (subtitle || text);
  const autoStrongTitle = strongTitle === "auto" && isMediaItem;
  const c = themeClasses2(ListItemClasses({
    ...props,
    titleFontSizeIos,
    titleFontSizeMaterial,
    dividers,
    strongTitle,
    mediaClassName,
    innerClassName,
    contentClassName,
    titleWrapClassName
  }, colors, {
    isMediaItem,
    theme,
    textColor,
    needsTouchRipple,
    isMenuListItemActive,
    darkClasses: dark,
    autoStrongTitle,
    className
  }), className);
  const itemContentClasses = isLink || isLabel ? c.itemContent.link : c.itemContent.default;
  const titleClasses = menuListItem ? c.title.menuListItem : strongTitle === true || autoStrongTitle ? c.title.strong : c.title.default;
  if (groupTitle) {
    return import_react40.default.createElement(Component, {
      className: cls(c.groupTitle, className)
    }, title, children);
  }
  return import_react40.default.createElement(Component, _extends30({
    ref: elRef,
    className: c.base
  }, attrs), import_react40.default.createElement(ItemContentComponent, _extends30({
    ref: rippleElRef,
    className: itemContentClasses
  }, linkPropsComputed), media && import_react40.default.createElement("div", {
    className: c.media
  }, media), import_react40.default.createElement("div", {
    className: c.inner
  }, header && import_react40.default.createElement("div", {
    className: c.header
  }, header), (title || after) && import_react40.default.createElement("div", {
    className: c.titleWrap
  }, title && import_react40.default.createElement("div", {
    className: titleClasses
  }, title), after && import_react40.default.createElement("div", {
    className: c.after
  }, after), isLink && hasChevron && !menuListItem && (chevronIcon || import_react40.default.createElement(ChevronIcon_default, {
    className: c.chevron
  }))), subtitle && import_react40.default.createElement("div", {
    className: c.subtitle
  }, subtitle), text && import_react40.default.createElement("div", {
    className: c.text
  }, text), footer && import_react40.default.createElement("div", {
    className: c.footer
  }, footer), innerChildren), contentChildren), children);
});
ListItem.displayName = "ListItem";
var ListItem_default = ListItem;

// node_modules/konsta/react/esm/components/ListInput.js
var import_react42 = __toESM(require_react(), 1);

// node_modules/konsta/react/esm/components/icons/DropdownIcon.js
var import_react41 = __toESM(require_react(), 1);
function _extends31() {
  _extends31 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends31.apply(this, arguments);
}
var DropdownIcon = (props) => {
  return import_react41.default.createElement("svg", _extends31({
    xmlns: "http://www.w3.org/2000/svg",
    width: "8",
    height: "5",
    viewBox: "0 0 8 5",
    fill: "currentcolor"
  }, props), import_react41.default.createElement("polygon", {
    fillRule: "evenodd",
    points: "0 0 8 0 4 5"
  }));
};
var DropdownIcon_default = DropdownIcon;

// node_modules/konsta/shared/esm/classes/ListInputClasses.js
var ListInputClasses = (props, colors, _ref) => {
  let {
    isFloatingTransformed,
    isFocused,
    darkClasses,
    getLabelColor,
    hasLabel
  } = _ref;
  const {
    error,
    type,
    outline,
    inputClassName = "",
    inputClass = ""
  } = props;
  return {
    base: {
      common: "",
      ios: cls(outline && "my-4"),
      material: cls("py-2")
    },
    itemContent: {
      common: "relative",
      ios: cls(outline && "ml-4 mr-4 rounded-lg", !outline && colors.bgIos),
      material: cls("min-h-[56px] ml-4 mr-4", outline ? cls("rounded") : cls(colors.bgMaterial, "rounded-t relative "))
    },
    inner: {
      common: "",
      material: cls(!outline ? "pt-2 pb-2" : "pt-4 pb-4"),
      stacked: "",
      floating: ""
    },
    label: {
      common: cls(`duration-200 text-xs`, getLabelColor(), outline && "flex"),
      ios: cls(outline && "-mt-4"),
      material: cls(outline && "-mt-4"),
      stacked: "",
      floating: {
        common: cls(`pointer-events-none duration-200 transform origin-left rtl:origin-right max-w-[66%]`, isFloatingTransformed && "scale-133"),
        ios: isFloatingTransformed ? outline ? "translate-y-6" : "translate-y-4" : "",
        material: isFloatingTransformed ? outline ? "translate-y-8" : "translate-y-3" : ""
      }
    },
    labelText: {
      common: cls(outline && "relative p-1 block -m-1"),
      ios: cls(outline && cls("-top-1", colors.outlineLabelBgIos)),
      material: cls(outline && cls("-top-2", colors.outlineLabelBgMaterial))
    },
    inputWrap: {
      common: "relative",
      ios: cls((!hasLabel || outline) && "-mt-2.5", "-mb-2.5"),
      stacked: "",
      floating: ""
    },
    media: {
      material: ""
    },
    titleWrap: {
      material: `duration-200 ${getLabelColor()}`
    },
    input: {
      common: `block text-base appearance-none w-full focus:outline-none bg-transparent ${inputClassName || inputClass}`,
      ios: "h-10",
      material: "h-6",
      notFloating: {
        common: cls("placeholder-black placeholder-opacity-30", darkClasses("dark:placeholder-white dark:placeholder-opacity-30")),
        material: cls(type === "textarea" && "py-1"),
        ios: cls(type === "textarea" && "py-2")
      },
      floating: isFloatingTransformed ? "placeholder-transparent" : cls(`placeholder-black placeholder-opacity-30`, darkClasses("dark:placeholder-white dark:placeholder-opacity-30"))
    },
    errorInfo: {
      common: "text-xs relative z-10",
      ios: "mt-1",
      material: ""
    },
    error: colors.errorText,
    info: "opacity-50",
    clearButton: {
      common: "absolute end-0 top-1/2 transform -translate-y-1/2 cursor-pointer",
      ios: cls("w-3.5 h-3.5 opacity-45 active:opacity-30", colors.labelTextIos),
      material: cls("w-6 h-6 active:opacity-55", colors.labelTextMaterial)
    },
    dropdown: "absolute end-0 top-1/2 transform -translate-y-1/2 pointer-events-none opacity-50",
    border: {
      common: "pointer-events-none absolute start-0 bottom-0 duration-200 w-full",
      ios: outline && cls(error ? colors.errorBorder : isFocused ? colors.outlineBorderFocusIos : colors.outlineBorderIos, "h-full border rounded-lg -z-10"),
      material: cls(error ? colors.errorBorder : isFocused ? colors.outlineBorderFocusMaterial : colors.outlineBorderMaterial, outline && cls("h-full border rounded -z-10", isFocused && "border-2"), !outline && cls("border-b h-px origin-bottom", isFocused && "scale-y-[2]"))
    }
  };
};

// node_modules/konsta/shared/esm/colors/ListInputColors.js
var ListInputColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: "",
    bgMaterial: cls("bg-md-light-surface-variant", dark("dark:bg-md-dark-surface-variant")),
    outlineBorderIos: cls("border-black border-opacity-30", dark("dark:border-white dark:border-opacity-30")),
    outlineBorderFocusIos: "border-primary",
    outlineBorderMaterial: cls("border-md-light-on-surface", dark("dark:border-md-dark-on-surface")),
    outlineBorderFocusMaterial: cls("border-md-light-primary", dark("dark:border-md-dark-primary")),
    outlineLabelBgIos: cls("bg-ios-light-surface-1", dark("dark:bg-ios-dark-surface-1")),
    outlineLabelBgMaterial: cls("bg-md-light-surface", dark("dark:bg-md-dark-surface")),
    labelTextIos: "",
    labelTextFocusIos: "",
    labelTextMaterial: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    labelTextFocusMaterial: cls("text-md-light-primary", dark("dark:text-md-dark-primary")),
    errorText: "text-red-500",
    errorBorder: "border-red-500",
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/ListInput.js
function _extends32() {
  _extends32 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends32.apply(this, arguments);
}
var ListInput = (0, import_react42.forwardRef)((props, ref) => {
  const {
    component = "li",
    className,
    colors: colorsProp,
    label,
    floatingLabel,
    outline,
    outlineIos,
    outlineMaterial,
    media,
    input,
    // for custom input
    info,
    // string
    error,
    // string or bool
    clearButton,
    dropdown,
    // input props
    inputId,
    inputStyle,
    inputClassName = "",
    name,
    value,
    defaultValue,
    type = "text",
    inputMode,
    readOnly,
    required,
    disabled,
    placeholder,
    size,
    accept,
    autoComplete,
    autoCorrect,
    autoCapitalize,
    spellCheck,
    autoFocus,
    autoSave,
    max,
    min,
    step,
    maxLength,
    minLength,
    multiple,
    pattern,
    tabIndex,
    onInput,
    onChange,
    onFocus,
    onBlur,
    onClear,
    ios,
    material,
    children,
    ...rest
  } = props;
  const inputElRef = (0, import_react42.useRef)(null);
  const elRef = (0, import_react42.useRef)(null);
  (0, import_react42.useImperativeHandle)(ref, () => ({
    el: elRef.current,
    inputEl: inputElRef.current
  }));
  const [isFocused, setIsFocused] = (0, import_react42.useState)(false);
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = ListInputColors(colorsProp, dark);
  const labelStyle = label && floatingLabel ? "floating" : "stacked";
  const labelStyleIsFloating = labelStyle === "floating" ? "floating" : "notFloating";
  const getDomValue = () => {
    if (!inputElRef.current)
      return void 0;
    return inputElRef.current.value;
  };
  const isInputHasValue = () => {
    const domValue = getDomValue();
    return typeof value === "undefined" ? domValue || domValue === 0 : value || value === 0;
  };
  const isFloatingTransformed = label && floatingLabel && !isInputHasValue() && !isFocused;
  const getLabelColor = () => {
    if (error)
      return colors.errorText;
    if (theme === "material") {
      return isFocused ? colors.labelTextFocusMaterial : colors.labelTextMaterial;
    }
    if (theme === "ios") {
      return isFocused ? colors.labelTextFocusIos : colors.labelTextIos;
    }
    return "";
  };
  const onFocusInternal = (e) => {
    setIsFocused(true);
    if (onFocus)
      onFocus(e);
  };
  const onBlurInternal = (e) => {
    setIsFocused(false);
    if (onBlur)
      onBlur(e);
  };
  const isOutline = typeof outline === "undefined" ? theme === "ios" ? outlineIos : outlineMaterial : outline;
  const c = themeClasses2(ListInputClasses({
    ...props,
    outline: isOutline
  }, colors, {
    isFloatingTransformed,
    isFocused,
    darkClasses: dark,
    getLabelColor,
    inputClassName,
    hasLabel: !!label
  }));
  const attrs = {
    ...rest
  };
  const createInput = () => {
    if (input)
      return input;
    const InputComponent = type === "select" || type === "textarea" ? type : "input";
    const needsType = InputComponent === "input";
    return import_react42.default.createElement(InputComponent, {
      id: inputId,
      ref: inputElRef,
      className: c.input[labelStyleIsFloating],
      style: inputStyle,
      name,
      type: needsType ? type : void 0,
      placeholder,
      inputMode,
      size,
      accept,
      autoComplete,
      autoCorrect,
      autoCapitalize,
      spellCheck,
      autoFocus,
      autoSave,
      disabled,
      max,
      maxLength,
      min,
      minLength,
      step,
      multiple,
      readOnly,
      required,
      pattern,
      tabIndex,
      value,
      defaultValue,
      onInput,
      onChange,
      onFocus: onFocusInternal,
      onBlur: onBlurInternal
    }, type === "select" ? children : null);
  };
  const errorInfoContent = import_react42.default.createElement(import_react42.default.Fragment, null, error && error !== true && import_react42.default.createElement("div", {
    className: cls(c.errorInfo, c.error)
  }, error), info && !error && import_react42.default.createElement("div", {
    className: cls(c.errorInfo, c.info)
  }, info));
  const innerChildren = import_react42.default.createElement(import_react42.default.Fragment, null, label && import_react42.default.createElement("div", {
    className: c.label[labelStyle]
  }, import_react42.default.createElement("div", {
    className: c.labelText
  }, label)), import_react42.default.createElement("div", {
    className: c.inputWrap[labelStyle]
  }, createInput(), clearButton && import_react42.default.createElement(DeleteIcon_default, {
    theme,
    onClick: onClear,
    className: c.clearButton
  }), dropdown && import_react42.default.createElement(DropdownIcon_default, {
    className: c.dropdown
  })), errorInfoContent);
  return import_react42.default.createElement(ListItem_default, _extends32({
    ref: elRef,
    component,
    media,
    className: c.base,
    title: null,
    mediaClassName: c.media,
    innerClassName: c.inner[labelStyle],
    contentClassName: c.itemContent,
    titleWrapClassName: c.titleWrap,
    innerChildren,
    contentChildren: (isOutline || theme === "material") && import_react42.default.createElement("span", {
      className: c.border
    }),
    dividers: theme === "material" || isOutline ? false : void 0
  }, attrs), type !== "select" ? children : null);
});
ListInput.displayName = "ListInput";
var ListInput_default = ListInput;

// node_modules/konsta/react/esm/components/MenuList.js
var import_react43 = __toESM(require_react(), 1);
function _extends33() {
  _extends33 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends33.apply(this, arguments);
}
var MenuList = (0, import_react43.forwardRef)((props, ref) => {
  const {
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react43.useRef)(null);
  (0, import_react43.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const attrs = {
    ...rest
  };
  return import_react43.default.createElement(List_default, _extends33({
    ref: elRef,
    menuList: true
  }, attrs), children);
});
MenuList.displayName = "MenuList";
var MenuList_default = MenuList;

// node_modules/konsta/react/esm/components/MenuListItem.js
var import_react44 = __toESM(require_react(), 1);
function _extends34() {
  _extends34 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends34.apply(this, arguments);
}
var MenuListItem = (0, import_react44.forwardRef)((props, ref) => {
  const {
    active,
    href,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react44.useRef)(null);
  (0, import_react44.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const attrs = {
    ...rest
  };
  return import_react44.default.createElement(ListItem_default, _extends34({
    ref: elRef,
    menuListItem: true,
    menuListItemActive: active,
    href: href || false
  }, attrs), children);
});
MenuListItem.displayName = "MenuListItem";
var MenuListItem_default = MenuListItem;

// node_modules/konsta/react/esm/components/Message.js
var import_react45 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/MessageClasses.js
var MessageClasses = (props, colors) => {
  const {
    type
  } = props;
  return {
    message: {
      common: "max-w-[70%] box-border flex relative z-1 transform translate-z-0 mb-2 first:mt-2"
    },
    messageSent: {
      common: cls("self-end", colors.messageSent)
    },
    messageReceived: {
      common: colors.messageReceived
    },
    messageName: {
      common: "text-xs",
      ios: cls("mb-0.5 ms-4", colors.messageNameIos),
      material: cls("ms-4 mb-0.5", colors.messageNameMd)
    },
    messageHeader: {
      common: "text-xs",
      ios: cls("mb-0.5 ms-4", colors.messageNameIos),
      material: cls("ms-4 mb-0.5", colors.messageNameMd)
    },
    messageFooter: {
      common: "text-xs",
      ios: cls("mb-0.5 ms-4", colors.messageNameIos),
      material: cls("ms-4 mb-0.5", colors.messageNameMd)
    },
    messageAvatar: {
      common: cls("rounded-full relative bg-cover self-end shrink-0 me-1.5 w-8 h-8")
    },
    messageContent: {
      common: "flex flex-col"
    },
    messageBubble: {
      ...type === "sent" && {
        ios: cls("rounded-3xl box-border break-words flex flex-col relative rounded-2xl py-1.5 px-4", colors.bubbleSentIos),
        material: cls("box-border break-words flex flex-col relative rounded-3xl py-2.5 px-4", colors.bubbleSentMd)
      },
      ...type === "received" && {
        ios: cls("rounded-2xl box-border break-words flex flex-col relative rounded-2xl py-1.5 px-4", colors.bubbleReceivedIos),
        material: cls("box-border break-words flex flex-col relative rounded-3xl py-2.5 px-4 ", colors.bubbleReceivedMd)
      }
    },
    messageTextHeader: {
      common: "w-full text-left leading-tight text-sm opacity-80"
    },
    messageTextFooter: {
      common: "w-full text-left leading-tight text-sm opacity-80"
    },
    messageText: {
      common: "w-full text-left leading-tight"
    }
  };
};

// node_modules/konsta/shared/esm/colors/MessageColors.js
var MessageColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    messageSent: "text-white",
    messageReceived: "text-inherit",
    messageNameIos: cls("text-black text-opacity-45", dark("dark:text-white dark:text-opacity-45")),
    messageNameMd: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    bubbleSentIos: cls("bg-primary"),
    bubbleSentMd: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary dark:text-md-dark-on-primary")),
    bubbleReceivedIos: cls("bg-[#e5e5ea]", dark("dark:bg-[#252525]")),
    bubbleReceivedMd: cls(dark("dark:bg-md-dark-surface-variant"), "bg-[#e5e5ea]"),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Message.js
function _extends35() {
  _extends35 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends35.apply(this, arguments);
}
var Message = (0, import_react45.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    id,
    text,
    name,
    type = "sent",
    header,
    footer,
    textHeader,
    textFooter,
    avatar,
    ios,
    material,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react45.useRef)(null);
  (0, import_react45.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = MessageColors(colorsProp, dark);
  const c = themeClasses2(MessageClasses({
    ...props
  }, colors));
  const Component = component;
  const attrs = {
    ...rest
  };
  const classes = cls(className, c.message, {
    [c.messageSent]: type === "sent",
    [c.messageReceived]: type === "received"
  });
  return import_react45.default.createElement(Component, _extends35({
    id,
    ref: elRef,
    className: classes
  }, attrs), avatar && import_react45.default.createElement("div", {
    className: c.messageAvatar
  }, avatar), import_react45.default.createElement("div", {
    className: c.messageContent
  }, name && import_react45.default.createElement("div", {
    className: c.messageName
  }, name), header && import_react45.default.createElement("div", {
    className: c.messageHeader
  }, header), import_react45.default.createElement("div", {
    className: c.messageBubble
  }, textHeader && import_react45.default.createElement("div", {
    className: c.messageTextHeader
  }, textHeader), text && import_react45.default.createElement("div", {
    className: c.messageText
  }, text), textFooter && import_react45.default.createElement("div", {
    className: c.messageTextFooter
  }, textFooter)), footer && import_react45.default.createElement("div", {
    className: c.messageFooter
  }, footer)));
});
Message.displayName = "Message";
var Message_default = Message;

// node_modules/konsta/react/esm/components/Messagebar.js
var import_react47 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/MessagebarClasses.js
var MessagebarClasses = (props, colors, _ref) => {
  let {
    isFocused
  } = _ref;
  const {
    rightClassName = "",
    rightClass = "",
    leftClassName = "",
    leftClass = ""
  } = props;
  return {
    base: {
      common: "fixed bottom-0 start-0 w-full"
    },
    toolbar: {
      material: colors.bgMessage
    },
    left: {
      common: cls("mt-1 -ms-2", leftClassName || leftClass),
      ios: cls("px-2", colors.toolbarIconIos),
      material: cls("", colors.toolbarIconMd)
    },
    right: {
      common: cls("mt-1 -me-2", rightClassName || rightClass),
      ios: cls("px-2", colors.toolbarIconIos)
    },
    messagebarArea: {
      common: "w-full"
    },
    messagebarInput: {
      common: cls("block w-full focus:outline-none resize-none", isFocused && "outline-offset-0"),
      ios: cls("border h-8 rounded-3xl px-4 leading-4 py-1.5", colors.inputBgIos, colors.borderIos, colors.placeholderIos),
      material: cls("rounded-3xl h-12 px-4 py-4 leading-4 ", colors.inputBgMd, colors.placeholderMd)
    }
  };
};

// node_modules/konsta/shared/esm/colors/MessagebarColors.js
var MessagebarColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    toolbarIconIos: cls("fill-primary", dark("dark:fill-md-dark-primary")),
    toolbarIconMd: cls("fill-black"),
    inputBgIos: cls("bg-transparent"),
    borderIos: cls("border-[#c8c8cd]", dark("dark:border-white dark:border-opacity-30")),
    inputBgMd: cls("bg-md-light-surface-2", dark("dark:bg-md-dark-surface-variant")),
    placeholderIos: cls(dark("dark:placeholder-white dark:placeholder-opacity-40")),
    placeholderMd: cls("placeholder-md-light-on-surface-variant", dark("dark:placeholder-md-dark-on-surface-variant")),
    bgIos: cls("bg-white", dark("dark:bg-black")),
    bgMaterial: cls("bg-md-light-surface", dark("dark:bg-md-dark-surface")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Toolbar.js
var import_react46 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ToolbarClasses.js
var ToolbarClasses = (props, colors, classes) => {
  const {
    bgClassName = "",
    bgClass = "",
    outline,
    translucent,
    innerClassName = "",
    innerClass = "",
    tabbar,
    tabbarIcons,
    top
  } = props;
  return {
    base: {
      common: cls(`w-full z-20`, positionClass("relative", classes), !top && "pb-safe")
    },
    bg: {
      common: cls("absolute w-full h-full left-0 top-0", outline && (top ? "hairline-b" : "hairline-t"), bgClassName || bgClass),
      ios: cls(colors.bgIos, translucent && "translucent"),
      material: cls(`${colors.bgMaterial}`)
    },
    inner: {
      common: cls(`flex relative justify-between items-center w-full overflow-hidden`, innerClassName || innerClass),
      ios: cls("pl-2-safe pr-2-safe", tabbarIcons ? "h-12.5" : "h-11"),
      material: cls(!tabbar ? "pl-2-safe pr-2-safe" : "", tabbarIcons ? "h-20" : "h-14")
    },
    highlight: {
      common: cls(top ? "bottom-0" : "top-0", "absolute left-0 w-full h-0.5 duration-200 pointer-events-none transition-transform"),
      ios: colors.tabbarHighlightBgIos,
      material: colors.tabbarHighlightBgMaterial
    }
  };
};

// node_modules/konsta/shared/esm/colors/ToolbarColors.js
var ToolbarColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("bg-ios-light-surface-2", dark("dark:bg-ios-dark-surface-2")),
    bgMaterial: cls("bg-md-light-surface-2", dark("dark:bg-md-dark-surface-2")),
    tabbarHighlightBgIos: "bg-primary",
    tabbarHighlightBgMaterial: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Toolbar.js
function _extends36() {
  _extends36 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends36.apply(this, arguments);
}
var Toolbar = (0, import_react46.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    translucent = true,
    bgClassName = "",
    innerClassName = "",
    outline,
    tabbar,
    tabbarIcons,
    tabbarLabels,
    top,
    ios,
    material,
    children,
    ...rest
  } = props;
  const highlightElRef = (0, import_react46.useRef)(null);
  const elRef = (0, import_react46.useRef)(null);
  (0, import_react46.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const [highlightStyle, setHighlightStyle] = (0, import_react46.useState)({
    transform: "",
    width: ""
  });
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const attrs = {
    ...rest
  };
  const colors = ToolbarColors(colorsProp, dark);
  const isOutline = typeof outline === "undefined" ? theme === "ios" : outline;
  const c = themeClasses2(ToolbarClasses({
    ...props,
    outline: isOutline,
    translucent,
    bgClassName,
    innerClassName
  }, colors, className), className);
  const hasHighlight = theme === "material" && tabbar && !tabbarIcons;
  (0, import_react46.useEffect)(() => {
    if (hasHighlight && highlightElRef.current) {
      const linksEl = highlightElRef.current.previousElementSibling;
      const width = 1 / linksEl.children.length * 100;
      const activeIndex = [...linksEl.children].indexOf(linksEl.querySelector(".k-tabbar-link-active"));
      setHighlightStyle({
        ...highlightStyle,
        width: `${width}%`,
        transform: `translateX(${activeIndex * 100}%)`
      });
    }
  }, [children]);
  return import_react46.default.createElement(Component, _extends36({
    ref: elRef,
    className: c.base
  }, attrs), import_react46.default.createElement("div", {
    className: c.bg
  }), import_react46.default.createElement("div", {
    className: c.inner
  }, children), hasHighlight && import_react46.default.createElement("span", {
    className: c.highlight,
    style: highlightStyle,
    ref: highlightElRef
  }));
});
Toolbar.displayName = "Toolbar";
var Toolbar_default = Toolbar;

// node_modules/konsta/react/esm/components/Messagebar.js
function _extends37() {
  _extends37 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends37.apply(this, arguments);
}
var Messagebar = (0, import_react47.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    id,
    style,
    name,
    placeholder = "Message",
    value,
    outline = false,
    // eslint-disable-next-line
    leftClassName = "",
    // eslint-disable-next-line
    rightClassName = "",
    textareaId,
    disabled,
    size,
    left,
    right,
    ios,
    material,
    onInput,
    onChange,
    onFocus,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react47.useRef)(null);
  const areaElRef = (0, import_react47.useRef)(null);
  (0, import_react47.useImperativeHandle)(ref, () => ({
    el: elRef.current,
    areaElRef: areaElRef.current
  }));
  const [isFocused, setIsFocused] = (0, import_react47.useState)(false);
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = MessagebarColors(colorsProp, dark);
  const onFocusInternal = (e) => {
    setIsFocused(true);
    if (onFocus)
      onFocus(e);
  };
  const c = themeClasses2(MessagebarClasses({
    ...props
  }, colors, {
    isFocused
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  return import_react47.default.createElement(Component, _extends37({
    ref: elRef,
    id,
    style,
    className: c.base
  }, attrs), import_react47.default.createElement(Toolbar_default, {
    colors,
    outline
  }, left && import_react47.default.createElement("div", {
    className: c.left
  }, left), import_react47.default.createElement("div", {
    className: c.messagebarArea
  }, import_react47.default.createElement("textarea", {
    id: textareaId,
    ref: areaElRef,
    type: "textarea",
    className: c.messagebarInput,
    placeholder,
    name,
    size,
    disabled,
    onInput,
    onChange,
    onFocus: onFocusInternal,
    value
  })), right && import_react47.default.createElement("div", {
    className: c.right
  }, right)));
});
Messagebar.displayName = "Messagebar";
var Messagebar_default = Messagebar;

// node_modules/konsta/react/esm/components/Messages.js
var import_react48 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/MessagesClasses.js
var MessagesClasses = () => {
  return {
    base: {
      common: cls("flex flex-col relative z-1 px-2"),
      ios: "mb-12",
      material: "mb-16"
    }
  };
};

// node_modules/konsta/react/esm/components/Messages.js
function _extends38() {
  _extends38 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends38.apply(this, arguments);
}
var Messages = (0, import_react48.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    id,
    ios,
    material,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react48.useRef)(null);
  (0, import_react48.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const c = themeClasses2(MessagesClasses({
    ...props
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  return import_react48.default.createElement(Component, _extends38({
    id,
    className: c.base,
    ref: elRef
  }, attrs), children);
});
Messages.displayName = "Messages";
var Messages_default = Messages;

// node_modules/konsta/react/esm/components/MessagesTitle.js
var import_react49 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/MessagesTitleClasses.js
var MessagesTitleClasses = (props, colors) => {
  return {
    base: {
      common: cls("text-center text-xs leading-none"),
      ios: cls("w-full mt-2.5", colors.titleIos),
      material: cls("mt-4", colors.titleMd)
    }
  };
};

// node_modules/konsta/shared/esm/colors/MessagesTitleColors.js
var MessagesTitleColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    titleIos: cls("text-black text-opacity-45", dark("dark:text-white dark:text-opacity-45")),
    titleMd: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/MessagesTitle.js
function _extends39() {
  _extends39 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends39.apply(this, arguments);
}
var MessagesTitle = (0, import_react49.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    ios,
    material,
    id,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react49.useRef)(null);
  (0, import_react49.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = MessagesTitleColors(colorsProp, dark);
  const c = themeClasses2(MessagesTitleClasses({
    ...props
  }, colors));
  const Component = component;
  const attrs = {
    ...rest
  };
  return import_react49.default.createElement(Component, _extends39({
    id,
    className: c.base,
    ref: elRef
  }, attrs), children);
});
MessagesTitle.displayName = "MessagesTitle";
var MessagesTitle_default = MessagesTitle;

// node_modules/konsta/react/esm/components/Navbar.js
var import_react50 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/NavbarClasses.js
var NavbarClasses = (props, colors, classes) => {
  const {
    outline,
    translucent,
    large,
    medium,
    transparent,
    left,
    right,
    fontSizeIos,
    fontSizeMaterial,
    titleFontSizeIos,
    titleFontSizeMaterial,
    titleLargeFontSizeIos,
    titleLargeFontSizeMaterial,
    titleMediumFontSizeIos,
    titleMediumFontSizeMaterial,
    bgClassName = "",
    bgClass = "",
    subnavbarClassName = "",
    subnavbarClass = "",
    innerClassName = "",
    innerClass = "",
    leftClassName = "",
    leftClass = "",
    titleClassName = "",
    titleClass = "",
    subtitleClassName = "",
    subtitleClass = "",
    rightClassName = "",
    rightClass = "",
    centerTitle
  } = props;
  return {
    base: {
      common: cls(`w-full z-20 top-0 pt-safe`, (large || medium) && "pointer-events-none", positionClass("sticky", classes)),
      ios: cls(fontSizeIos, colors.textIos),
      material: cls(fontSizeMaterial, colors.textMaterial)
    },
    bg: {
      common: cls("absolute w-full h-full left-0 top-0", outline && "hairline-b", bgClassName || bgClass),
      ios: cls(colors.bgIos, translucent && "translucent"),
      material: `${colors.bgMaterial}`
    },
    subnavbar: {
      common: cls("relative flex items-center", subnavbarClassName || subnavbarClass, (large || medium) && "pointer-events-auto"),
      ios: "h-11 pl-2-safe pr-2-safe",
      material: "h-14 pl-4-safe pr-4-safe"
    },
    inner: {
      common: cls("flex relative items-center w-full overflow-hidden", innerClassName || innerClass, (large || medium) && "pointer-events-auto z-10"),
      ios: cls("pl-2-safe pr-2-safe h-11", !left && right ? "justify-end" : "justify-between"),
      material: "justify-start h-16 pl-safe pr-safe"
    },
    titleContainer: {
      common: cls("flex items-center px-4 relative", (large || medium) && "pointer-events-auto"),
      ios: cls(medium && cls(titleMediumFontSizeIos, "h-11 font-semibold"), large && cls(titleLargeFontSizeIos, "h-13 font-bold")),
      material: cls(medium && cls(titleMediumFontSizeMaterial, "h-12 pb-4"), large && cls(titleLargeFontSizeMaterial, "h-[5.5rem]"))
    },
    left: {
      common: cls("flex justify-center items-center h-full", leftClassName || leftClass),
      ios: "me-2 transform transform-gpu",
      material: "mx-1"
    },
    title: {
      common: cls(`whitespace-nowrap leading-tight`, titleClassName || titleClass, (large || medium || transparent) && "opacity-0", centerTitle ? `absolute top-1/2 left-1/2 transform-gpu -translate-x-1/2 -translate-y-1/2 text-center` : "text-start"),
      ios: cls(`${titleFontSizeIos} font-semibold`, !centerTitle && "first:mx-2"),
      material: cls(`${titleFontSizeMaterial} font-normal`, !centerTitle && "first:mx-4")
    },
    subtitle: {
      common: cls("font-normal leading-none", subtitleClassName || subtitleClass),
      ios: "text-2xs opacity-55",
      material: "text-sm opacity-85"
    },
    right: {
      common: cls("flex justify-center items-center h-full", rightClassName || rightClass),
      ios: cls("transform transform-gpu", centerTitle ? "ms-2" : "ms-auto"),
      material: "ms-auto me-1"
    }
  };
};

// node_modules/konsta/shared/esm/colors/NavbarColors.js
var NavbarColors = (colorsProp, dark) => {
  return {
    bgIos: cls("bg-ios-light-surface-2", dark("dark:bg-ios-dark-surface-2")),
    bgMaterial: cls("bg-md-light-surface-2", dark("dark:bg-md-dark-surface-2")),
    textIos: cls("text-black", dark("dark:text-white")),
    textMaterial: cls("text-md-light-on-surface", dark("dark:text-md-dark-on-surface")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Navbar.js
function _extends40() {
  _extends40 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends40.apply(this, arguments);
}
var Navbar = (0, import_react50.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    bgClassName = "",
    innerClassName = "",
    leftClassName = "",
    titleClassName = "",
    subtitleClassName = "",
    rightClassName = "",
    subnavbarClassName = "",
    centerTitle,
    colors: colorsProp,
    translucent = true,
    outline,
    medium,
    large,
    transparent,
    fontSizeIos = "text-[17px]",
    fontSizeMaterial = "text-[16px]",
    titleFontSizeIos = "text-[17px]",
    titleFontSizeMaterial = "text-[22px]",
    titleMediumFontSizeIos = "text-[24px]",
    titleMediumFontSizeMaterial = "text-[24px]",
    titleLargeFontSizeIos = "text-[34px]",
    titleLargeFontSizeMaterial = "text-[28px]",
    scrollEl,
    left,
    title,
    subtitle,
    right,
    subnavbar,
    ios,
    material,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react50.useRef)(null);
  const titleContainerHeight = (0, import_react50.useRef)(0);
  const bgElRef = (0, import_react50.useRef)(null);
  const innerElRef = (0, import_react50.useRef)(null);
  const titleContainerElRef = (0, import_react50.useRef)(null);
  const titleElRef = (0, import_react50.useRef)(null);
  const subnavbarElRef = (0, import_react50.useRef)(null);
  const wasScrollable = (0, import_react50.useRef)(null);
  (0, import_react50.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const attrs = {
    ...rest
  };
  const colors = NavbarColors(colorsProp, dark);
  const onScroll = (e) => {
    const {
      scrollTop
    } = e.target;
    if (!transparent && !large && !medium) {
      if (wasScrollable.current) {
        if (titleElRef.current) {
          titleElRef.current.style.opacity = "";
        }
        if (bgElRef.current) {
          bgElRef.current.style.opacity = "";
        }
      }
      return;
    }
    const maxTranslate = titleContainerHeight.current;
    const scrollProgress = Math.max(Math.min(scrollTop / maxTranslate, 1), 0);
    bgElRef.current.style.opacity = transparent ? -0.5 + scrollProgress * 1.5 : "";
    if (medium || large) {
      bgElRef.current.style.transform = `translateY(-${scrollProgress * maxTranslate}px)`;
    }
    if (titleContainerElRef.current) {
      titleContainerElRef.current.style.transform = `translateY(-${scrollProgress * maxTranslate}px)`;
      titleContainerElRef.current.style.opacity = 1 - scrollProgress * 2;
    }
    if (titleElRef.current) {
      titleElRef.current.style.opacity = -0.5 + scrollProgress * 1.5;
    }
    if ((medium || large) && subnavbarElRef.current) {
      subnavbarElRef.current.style.transform = `translateY(-${scrollProgress * maxTranslate}px)`;
    }
  };
  const getScrollEl = () => {
    if (typeof scrollEl === "undefined") {
      return elRef.current && elRef.current.parentNode;
    }
    return scrollEl.current || scrollEl;
  };
  const initScroll = () => {
    if (!large && !medium && !transparent) {
      if (wasScrollable.current) {
        onScroll({
          target: {
            scrollTop: 0
          }
        });
        wasScrollable.current = false;
      }
      return;
    }
    wasScrollable.current = true;
    if (titleContainerElRef.current) {
      titleContainerHeight.current = titleContainerElRef.current.offsetHeight;
    } else {
      titleContainerHeight.current = innerElRef.current.offsetHeight;
    }
    const scrollElLocal = getScrollEl();
    if (scrollElLocal) {
      scrollElLocal.addEventListener("scroll", onScroll);
      onScroll({
        target: scrollElLocal
      });
    } else {
      onScroll({
        target: {
          scrollTop: 0
        }
      });
    }
  };
  const destroyScroll = () => {
    const scrollElLocal = getScrollEl();
    if (scrollElLocal) {
      scrollElLocal.removeEventListener("scroll", onScroll);
    }
  };
  (0, import_react50.useEffect)(() => {
    initScroll();
    return destroyScroll;
  });
  const isOutline = typeof outline === "undefined" ? theme === "ios" : outline;
  const c = themeClasses2(NavbarClasses({
    ...props,
    centerTitle: typeof centerTitle === "undefined" ? theme === "ios" : centerTitle,
    translucent,
    outline: isOutline,
    fontSizeIos,
    fontSizeMaterial,
    titleFontSizeIos,
    titleFontSizeMaterial,
    titleMediumFontSizeIos,
    titleMediumFontSizeMaterial,
    titleLargeFontSizeIos,
    titleLargeFontSizeMaterial,
    bgClassName,
    innerClassName,
    leftClassName,
    titleClassName,
    subtitleClassName,
    rightClassName,
    subnavbarClassName
  }, colors, className), className);
  return import_react50.default.createElement(Component, _extends40({
    ref: elRef,
    className: c.base
  }, attrs), import_react50.default.createElement("div", {
    className: c.bg,
    ref: bgElRef
  }), import_react50.default.createElement("div", {
    className: c.inner,
    ref: innerElRef
  }, left && import_react50.default.createElement("div", {
    className: c.left
  }, left), (title || subtitle) && import_react50.default.createElement("div", {
    className: c.title,
    ref: titleElRef
  }, title, subtitle && import_react50.default.createElement("div", {
    className: c.subtitle
  }, subtitle)), right && import_react50.default.createElement("div", {
    className: c.right
  }, right), children), (large || medium) && import_react50.default.createElement("div", {
    className: c.titleContainer,
    ref: titleContainerElRef
  }, title), subnavbar && import_react50.default.createElement("div", {
    className: c.subnavbar,
    ref: subnavbarElRef
  }, subnavbar));
});
Navbar.displayName = "Navbar";
var Navbar_default = Navbar;

// node_modules/konsta/react/esm/components/NavbarBackLink.js
var import_react52 = __toESM(require_react(), 1);

// node_modules/konsta/react/esm/components/icons/BackIcon.js
var import_react51 = __toESM(require_react(), 1);
function _extends41() {
  _extends41 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends41.apply(this, arguments);
}
var BackIcon = (_ref) => {
  let {
    theme,
    ...rest
  } = _ref;
  return theme === "ios" ? import_react51.default.createElement("svg", _extends41({
    xmlns: "http://www.w3.org/2000/svg",
    width: "12",
    height: "20",
    viewBox: "0 0 12 20",
    fill: "currentcolor"
  }, rest), import_react51.default.createElement("path", {
    d: "M0.18261596,9.4221638 C0.21783626,9.37068075 0.25835058,9.32165682 0.30416276,9.27584463 L9.1425872,0.4374202 C9.7256776,-0.14567018 10.6691555,-0.1475686 11.2590259,0.44230183 C11.8448123,1.02808827 11.8502479,1.97240019 11.2639075,2.55874056 L3.82594417,9.9967039 L11.2578297,17.4285894 C11.8409201,18.0116798 11.8428185,18.9551577 11.252948,19.5450281 C10.6671616,20.1308146 9.7228497,20.1362501 9.13650932,19.5499097 L0.2980849,10.7114853 C-0.0545897,10.3588107 -0.0959125,9.8144953 0.18261596,9.4221638 Z"
  })) : import_react51.default.createElement("svg", _extends41({
    xmlns: "http://www.w3.org/2000/svg",
    width: "16",
    height: "16",
    viewBox: "0 0 16 16",
    fill: "currentcolor"
  }, rest), import_react51.default.createElement("polygon", {
    points: "16 7 3.83 7 9.42 1.41 8 0 0 8 8 16 9.41 14.59 3.83 9 16 9"
  }));
};
var BackIcon_default = BackIcon;

// node_modules/konsta/shared/esm/classes/NavbarBackLinkClasses.js
var NavbarBackLinkClasses = () => {
  return {
    base: {
      common: "cursor-pointer",
      material: "min-w-12 k-touch-ripple-inset"
    },
    icon: "rtl:rotate-180"
  };
};

// node_modules/konsta/react/esm/components/NavbarBackLink.js
function _extends42() {
  _extends42 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends42.apply(this, arguments);
}
var NavbarBackLink = (0, import_react52.forwardRef)((props, ref) => {
  const {
    component = "a",
    className,
    text = "Back",
    showText = "auto",
    ios,
    material,
    onClick,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react52.useRef)(null);
  (0, import_react52.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const shouldShowText = showText === "auto" && theme === "ios" || showText === true;
  const c = themeClasses2(NavbarBackLinkClasses(), className);
  return import_react52.default.createElement(Link_default, _extends42({
    ref: elRef,
    component,
    className: c.base,
    navbar: true
  }, attrs, {
    onClick
  }), import_react52.default.createElement("span", {
    className: c.icon
  }, import_react52.default.createElement(BackIcon_default, {
    theme
  })), shouldShowText && import_react52.default.createElement("span", null, text), children);
});
NavbarBackLink.displayName = "NavbarBackLink";
var NavbarBackLink_default = NavbarBackLink;

// node_modules/konsta/react/esm/components/Notification.js
var import_react53 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/NotificationsClasses.js
var NotificationsClasses = (props, colors, classes) => {
  const {
    opened,
    translucent
  } = props;
  return {
    base: {
      common: cls(positionClass("absolute", classes), "z-50 transform transition-transform-opacity box-border duration-500", !opened && "-translate-y-full opacity-0 pointer-events-none transition duration-500", "md:w-[568px] md:end-auto md:start-1/2 md:-ms-[256px]"),
      ios: cls("rounded-xl px-2.5 py-2.5 start-2 end-2 top-2 shadow-lg", colors.bgIos, translucent && "translucent"),
      material: cls("rounded-2xl py-5 px-4 start-4 end-4 top-4", colors.bgMaterial)
    },
    content: {
      common: "",
      ios: "mt-2.5 ",
      material: cls("mt-2")
    },
    header: {
      common: cls("flex justify-start"),
      ios: "items-center",
      material: "items-start"
    },
    icon: {
      ios: cls("me-2"),
      material: "me-4"
    },
    contentTitle: {
      material: cls("flex flex-row items-center")
    },
    title: {
      ios: cls("tracking-wide text-[13px] uppercase", colors.titleIos),
      material: cls("font-medium")
    },
    titleRightText: {
      ios: cls("me-1 ms-auto text-[13px]", colors.titleRightIos),
      material: cls("ms-1 text-xs before:w-0.75 before:h-0.75 before:rounded-full before:inline-block before:align-middle before:me-1", colors.titleRightMd)
    },
    button: {
      ios: cls("me-1 ms-auto cursor-pointer"),
      material: cls("ms-auto cursor-pointer")
    },
    deleteIcon: {
      ios: cls("w-5 h-5", colors.deleteIconIos),
      material: cls("w-6 h-6", colors.deleteIconMd)
    },
    subtitle: {
      ios: cls("text-[15px] font-semibold", colors.subtitleIos),
      material: cls("text-sm")
    },
    text: {
      ios: cls("text-[15px]"),
      material: cls("text-sm", colors.textMaterial)
    }
  };
};

// node_modules/konsta/shared/esm/colors/NotificationsColors.js
var NotificationsColors = (colorsProp, dark) => {
  return {
    bgIos: cls("bg-white", dark("dark:bg-[#1e1e1e]")),
    bgMaterial: cls("bg-md-light-surface-5", dark("dark:bg-md-dark-surface-5")),
    titleIos: cls("text-black", dark("dark:text-white")),
    titleRightIos: cls("text-opacity-45 text-black", dark("dark:text-white dark:text-opacity-45")),
    titleRightMd: cls("text-md-light-on-surface-variant before:bg-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant before:dark:bg-md-dark-on-surface-variant")),
    subtitleIos: cls("text-black ", dark("dark:text-white")),
    textMaterial: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant ")),
    deleteIconIos: cls("fill-stone-400 active:fill-stone-200", dark("dark:fill-stone-500 dark:active:fill-stone-700")),
    deleteIconMd: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Notification.js
function _extends43() {
  _extends43 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends43.apply(this, arguments);
}
var Notification = (0, import_react53.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    button,
    icon,
    title,
    titleRightText,
    subtitle,
    text,
    translucent = true,
    opened,
    onClose,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react53.useRef)(null);
  (0, import_react53.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = NotificationsColors(colorsProp, dark);
  const c = themeClasses2(NotificationsClasses({
    ...props,
    translucent
  }, colors, className), className);
  if (theme === "ios")
    return import_react53.default.createElement(Component, _extends43({
      ref: elRef,
      className: c.base
    }, attrs), import_react53.default.createElement("div", {
      className: c.header
    }, icon && import_react53.default.createElement("div", {
      className: c.icon
    }, icon), title && import_react53.default.createElement("div", {
      className: c.title
    }, title), titleRightText && import_react53.default.createElement("div", {
      className: c.titleRightText
    }, titleRightText), button && import_react53.default.createElement("div", {
      className: c.button,
      role: "button",
      tabIndex: "0",
      onClick: onClose
    }, import_react53.default.createElement(DeleteIcon_default, {
      theme,
      className: c.deleteIcon
    }))), import_react53.default.createElement("div", {
      className: c.content
    }, subtitle && import_react53.default.createElement("div", {
      className: c.subtitle
    }, subtitle), text && import_react53.default.createElement("div", {
      className: c.text
    }, text), children));
  return import_react53.default.createElement(Component, _extends43({
    ref: elRef,
    className: c.base
  }, attrs), import_react53.default.createElement("div", {
    className: c.header
  }, icon && import_react53.default.createElement("div", {
    className: c.icon
  }, icon), import_react53.default.createElement("div", {
    className: c.contentWrapper
  }, import_react53.default.createElement("div", {
    className: c.contentTitle
  }, title && import_react53.default.createElement("div", {
    className: c.title
  }, title), titleRightText && import_react53.default.createElement("div", {
    className: c.titleRightText
  }, titleRightText)), import_react53.default.createElement("div", {
    className: c.content
  }, subtitle && import_react53.default.createElement("div", {
    className: c.subtitle
  }, subtitle), text && import_react53.default.createElement("div", {
    className: c.text
  }, text), children)), button && import_react53.default.createElement("div", {
    className: c.button,
    role: "button",
    tabIndex: "0",
    onClick: onClose
  }, import_react53.default.createElement(DeleteIcon_default, {
    theme,
    className: c.deleteIcon
  }))));
});
Notification.displayName = "Notification";
var Notification_default = Notification;

// node_modules/konsta/react/esm/components/Page.js
var import_react54 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/PageClasses.js
var PageClasses = (props, colors, classes) => {
  return {
    base: {
      common: cls("h-full w-full left-0 top-0 overflow-auto", positionClass("absolute", classes)),
      ios: colors.bgIos,
      material: colors.bgMaterial
    }
  };
};

// node_modules/konsta/shared/esm/colors/PageColors.js
var PageColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("bg-ios-light-surface", dark("dark:bg-ios-dark-surface")),
    bgMaterial: cls("bg-md-light-surface", dark("dark:bg-md-dark-surface")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Page.js
function _extends44() {
  _extends44 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends44.apply(this, arguments);
}
var Page = (0, import_react54.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react54.useRef)(null);
  (0, import_react54.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = PageColors(colorsProp, dark);
  const c = themeClasses2(PageClasses(props, colors, className), className);
  return import_react54.default.createElement(Component, _extends44({
    ref: elRef,
    className: c.base
  }, attrs), children);
});
Page.displayName = "Page";
var Page_default = Page;

// node_modules/konsta/react/esm/components/Panel.js
var import_react55 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/PanelClasses.js
var PanelClasses = (props, colors, classes) => {
  const {
    size,
    floating
  } = props;
  return {
    base: {
      common: cls("transition-transform transform duration-400 z-40 max-w-full overflow-hidden", floating ? "top-2-safe bottom-2-safe !h-auto" : "top-0 max-h-full", colors.bg, positionClass("fixed", classes), size),
      ios: "",
      material: "ease-material-in"
    },
    left: {
      common: cls("no-safe-areas-right", floating ? "right-full -mr-2 rounded-2xl" : "right-full"),
      material: cls(!floating && "rounded-r-2xl"),
      opened: "translate-x-full",
      closed: "-translate-x-2"
    },
    right: {
      common: cls("no-safe-areas-left", floating ? "left-full -ml-2 rounded-2xl" : "left-full"),
      material: cls(!floating && "rounded-l-2xl"),
      opened: "-translate-x-full",
      closed: "translate-x-2"
    },
    backdrop: {
      common: "fixed z-40 w-full h-full left-0 top-0 bg-black bg-opacity-50 duration-400",
      opened: "",
      closed: "opacity-0 pointer-events-none"
    }
  };
};

// node_modules/konsta/shared/esm/colors/PanelColors.js
var PanelColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bg: cls("bg-white", dark("dark:bg-black")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Panel.js
function _extends45() {
  _extends45 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends45.apply(this, arguments);
}
var Panel = (0, import_react55.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    size = "w-72 h-screen",
    side = "left",
    opened,
    backdrop = true,
    floating = false,
    onBackdropClick,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react55.useRef)(null);
  (0, import_react55.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const state = opened ? "opened" : "closed";
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = PanelColors(colorsProp, dark);
  const c = themeClasses2(PanelClasses({
    ...props,
    size,
    floating
  }, colors, className), className);
  const classes = cls(c.base, c[side][state]);
  return import_react55.default.createElement(import_react55.default.Fragment, null, backdrop && import_react55.default.createElement("div", {
    className: c.backdrop[state],
    onClick: onBackdropClick
  }), import_react55.default.createElement(Component, _extends45({
    ref: elRef,
    className: classes
  }, attrs), children));
});
Panel.displayName = "Panel";
var Panel_default = Panel;

// node_modules/konsta/react/esm/components/Popover.js
var import_react56 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/calc-popover-position.js
var calcPopoverPosition = (_ref) => {
  let {
    popoverEl,
    targetEl,
    angleEl,
    needsAngle,
    targetX,
    targetY,
    targetWidth = 0,
    targetHeight = 0,
    theme
  } = _ref;
  if (targetEl.current) {
    targetEl = targetEl.current;
  } else if (targetEl.value) {
    targetEl = targetEl.value;
  } else if (targetEl.el) {
    targetEl = targetEl.el;
  } else if (targetEl.$el) {
    targetEl = targetEl.$el;
  }
  if (typeof targetEl === "string") {
    targetEl = document.querySelector(targetEl);
  }
  let appWidth = document.body.offsetWidth;
  let appHeight = document.body.offsetHeight;
  if (appWidth === 0) {
    appWidth = window.innerWidth;
  }
  if (appHeight === 0) {
    appHeight = window.innerHeight;
  }
  const [popoverWidth, popoverHeight] = [popoverEl.offsetWidth, popoverEl.offsetHeight];
  let angleSize = 0;
  let angleLeft;
  let angleTop;
  let anglePosition = "";
  if (needsAngle) {
    angleSize = angleEl.offsetWidth / 2;
  }
  let targetOffsetLeft;
  let targetOffsetTop;
  const targetElStyles = window.getComputedStyle(targetEl);
  let safeAreaTop = parseInt(targetElStyles.getPropertyValue("--k-safe-area-top"), 10) || 0;
  let safeAreaLeft = parseInt(targetElStyles.getPropertyValue("--k-safe-area-left"), 10) || 0;
  let safeAreaRight = parseInt(targetElStyles.getPropertyValue("--k-safe-area-right"), 10) || 0;
  if (Number.isNaN(safeAreaTop))
    safeAreaTop = 0;
  if (Number.isNaN(safeAreaLeft))
    safeAreaLeft = 0;
  if (Number.isNaN(safeAreaRight))
    safeAreaRight = 0;
  if (targetEl) {
    targetWidth = targetEl.offsetWidth;
    targetHeight = targetEl.offsetHeight;
    const targetElBox = targetEl.getBoundingClientRect();
    targetOffsetLeft = targetElBox.left;
    targetOffsetTop = targetElBox.top;
  } else if (typeof targetX !== "undefined" && targetY !== "undefined") {
    targetOffsetLeft = targetX;
    targetOffsetTop = targetY;
  }
  let [left, top, diff] = [0, 0, 0];
  const angleMin = theme === "ios" ? 13 : 23;
  let position = "top";
  if (popoverHeight + angleSize < targetOffsetTop - safeAreaTop) {
    top = targetOffsetTop - popoverHeight - angleSize;
  } else if (popoverHeight + angleSize < appHeight - targetOffsetTop - targetHeight) {
    position = "bottom";
    top = targetOffsetTop + targetHeight + angleSize;
  } else {
    position = "middle";
    top = targetHeight / 2 + targetOffsetTop - popoverHeight / 2;
    diff = top;
    top = Math.max(5, Math.min(top, appHeight - popoverHeight - 5));
    diff -= top;
  }
  if (position === "top" || position === "bottom") {
    left = targetWidth / 2 + targetOffsetLeft - popoverWidth / 2;
    diff = left;
    left = Math.max(5, Math.min(left, appWidth - popoverWidth - 5));
    if (safeAreaLeft) {
      left = Math.max(left, safeAreaLeft);
    }
    if (safeAreaRight && left + popoverWidth > appWidth - 5 - safeAreaRight) {
      left = appWidth - 5 - safeAreaRight - popoverWidth;
    }
    if (position === "top") {
      anglePosition = "bottom";
    }
    if (position === "bottom") {
      anglePosition = "top";
    }
    diff -= left;
    angleLeft = popoverWidth / 2 - angleSize + diff;
    angleLeft = Math.max(Math.min(angleLeft, popoverWidth - angleSize * 2 - angleMin), angleMin);
  } else if (position === "middle") {
    left = targetOffsetLeft - popoverWidth - angleSize;
    anglePosition = "right";
    if (left < 5 || left + popoverWidth + safeAreaRight > appWidth || left < safeAreaLeft) {
      if (left < 5)
        left = targetOffsetLeft + targetWidth + angleSize;
      if (left + popoverWidth + safeAreaRight > appWidth)
        left = appWidth - popoverWidth - 5 - safeAreaRight;
      if (left < safeAreaLeft)
        left = safeAreaLeft;
      anglePosition = "left";
    }
    angleTop = popoverHeight / 2 - angleSize + diff;
    angleTop = Math.max(Math.min(angleTop, popoverHeight - angleSize * 2 - angleMin), angleMin);
  }
  const popoverVerticalPosition = position;
  const popoverHorizontalPosition = left < targetOffsetLeft ? "left" : "right";
  return {
    set: true,
    angleTop: typeof angleTop === "undefined" ? void 0 : `${angleTop}px`,
    angleLeft: typeof angleLeft === "undefined" ? void 0 : `${angleLeft}px`,
    anglePosition,
    popoverTop: `${top}px`,
    popoverLeft: `${left}px`,
    popoverPosition: `${popoverVerticalPosition}-${popoverHorizontalPosition}`
  };
};

// node_modules/konsta/shared/esm/classes/PopoverClasses.js
var PopoverClasses = (props, colors, classes) => {
  const {
    size,
    translucent,
    angleClassName,
    angleClass
  } = props;
  return {
    base: {
      common: cls("transition-transform-opacity z-40 no-safe-areas", positionClass("fixed", classes), size),
      ios: "duration-300",
      material: "duration-400 ease-material-in",
      opened: "",
      closed: {
        common: "opacity-0 pointer-events-none",
        ios: "",
        material: "scale-x-90 scale-y-75"
      }
    },
    inner: {
      common: cls("overflow-hidden relative"),
      ios: cls("rounded-xl", translucent && "translucent", colors.bgIos),
      material: cls("rounded-[1.75rem]", colors.bgMaterial)
    },
    angleWrap: {
      common: cls(angleClassName || angleClass || "", "pointer-events-none"),
      ios: cls("absolute w-6.5 h-6.5 z-50 overflow-hidden", translucent && "opacity-80"),
      material: cls("absolute w-6.5 h-6.5 z-50 overflow-hidden"),
      bottom: "top-full",
      top: "bottom-full",
      left: "right-full",
      right: "left-full"
    },
    angleArrow: {
      common: cls("absolute rounded w-full h-full transform rotate-45"),
      ios: colors.bgIos,
      material: colors.bgMaterial,
      bottom: "-top-4.75",
      top: "top-4.75",
      left: "left-4.75",
      right: "-left-4.75"
    },
    backdrop: {
      common: "fixed z-40 w-full h-full left-0 top-0 bg-black bg-opacity-50 duration-300",
      opened: "",
      closed: "opacity-0 pointer-events-none"
    }
  };
};

// node_modules/konsta/shared/esm/colors/PopoverColors.js
var PopoverColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("bg-ios-light-surface-3", dark("dark:bg-ios-dark-surface-3")),
    bgMaterial: cls("bg-md-light-surface-3", dark("dark:bg-md-dark-surface-3")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Popover.js
function _extends46() {
  _extends46 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends46.apply(this, arguments);
}
var Popover = (0, import_react56.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    angle = true,
    angleClassName = "",
    colors: colorsProp,
    size = "w-64",
    opened,
    backdrop = true,
    onBackdropClick,
    target,
    targetX,
    targetY,
    targetWidth,
    targetHeight,
    translucent = true,
    ios,
    material,
    // Children
    children,
    // Rest
    style = {},
    ...rest
  } = props;
  const elRef = (0, import_react56.useRef)(null);
  const angleElRef = (0, import_react56.useRef)(null);
  const [positions, setPositions] = (0, import_react56.useState)({
    set: false,
    angleTop: 0,
    angleLeft: 0,
    anglePosition: "bottom",
    popoverTop: 0,
    popoverLeft: 0,
    popoverPosition: "top-left"
  });
  (0, import_react56.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const state = opened ? "opened" : "closed";
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = PopoverColors(colorsProp, dark);
  const c = themeClasses2(PopoverClasses({
    ...props,
    size,
    angleClassName,
    translucent
  }, colors, className), className);
  const setPopover = () => {
    if (!target || !elRef.current || !opened)
      return;
    setPositions(calcPopoverPosition({
      popoverEl: elRef.current,
      targetEl: target,
      angleEl: angleElRef.current,
      needsAngle: angle,
      targetX,
      targetY,
      targetHeight,
      targetWidth,
      theme
    }));
  };
  const attachEvents = () => {
    if (typeof window === "undefined")
      return;
    window.addEventListener("resize", setPopover);
  };
  const detachEvents = () => {
    if (typeof window === "undefined")
      return;
    window.removeEventListener("resize", setPopover);
  };
  (0, import_react56.useEffect)(() => {
    attachEvents();
    return () => detachEvents();
  });
  (0, import_react56.useEffect)(() => {
    setPopover();
  }, [opened]);
  const popoverStyle = positions.set ? {
    ...style || {},
    left: positions.popoverLeft,
    top: positions.popoverTop
  } : style;
  const angleStyle = positions.set ? {
    left: positions.angleLeft,
    top: positions.angleTop
  } : void 0;
  const originClasses = {
    "top-right": "origin-bottom-left",
    "top-left": "origin-bottom-right",
    "middle-left": "origin-right",
    "middle-right": "origin-left",
    "bottom-right": "origin-top-left",
    "bottom-left": "origin-top-right"
  };
  const classes = cls(c.base[state], theme === "material" && originClasses[positions.popoverPosition]);
  return import_react56.default.createElement(import_react56.default.Fragment, null, backdrop && import_react56.default.createElement("div", {
    className: c.backdrop[state],
    onClick: onBackdropClick
  }), import_react56.default.createElement(Component, _extends46({
    ref: elRef,
    className: classes,
    style: popoverStyle
  }, attrs), angle && import_react56.default.createElement("div", {
    ref: angleElRef,
    style: angleStyle,
    className: c.angleWrap[positions.anglePosition]
  }, import_react56.default.createElement("div", {
    className: c.angleArrow[positions.anglePosition]
  })), import_react56.default.createElement("div", {
    className: c.inner
  }, children)));
});
Popover.displayName = "Popover";
var Popover_default = Popover;

// node_modules/konsta/react/esm/components/Popup.js
var import_react57 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/PopupClasses.js
var PopupClasses = (props, colors, classes) => {
  const {
    size
  } = props;
  return {
    base: {
      common: cls("left-1/2 top-1/2 transition-transform transform -translate-x-1/2 z-40 max-w-full max-h-full overflow-hidden md:no-safe-areas", colors.bg, positionClass("fixed", classes), size),
      ios: "duration-400 md:rounded-lg",
      material: " md:rounded-[1.75rem]",
      opened: {
        common: "-translate-y-1/2",
        material: cls("ease-material-in-popup duration-[600ms]")
      },
      closed: {
        common: "translate-y-full",
        material: "duration-400"
      }
    },
    backdrop: {
      common: "fixed z-40 w-full h-full left-0 top-0 bg-black bg-opacity-50 duration-400",
      opened: "",
      closed: "opacity-0 pointer-events-none"
    }
  };
};

// node_modules/konsta/shared/esm/colors/PopupColors.js
var PopupColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bg: cls("bg-white", dark("dark:bg-black")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Popup.js
function _extends47() {
  _extends47 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends47.apply(this, arguments);
}
var Popup = (0, import_react57.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    size = "w-screen h-screen md:w-160 md:h-160",
    opened,
    backdrop = true,
    onBackdropClick,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react57.useRef)(null);
  (0, import_react57.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const state = opened ? "opened" : "closed";
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = PopupColors(colorsProp, dark);
  const c = themeClasses2(PopupClasses({
    ...props,
    size
  }, colors, className), className);
  return import_react57.default.createElement(import_react57.default.Fragment, null, backdrop && import_react57.default.createElement("div", {
    className: c.backdrop[state],
    onClick: onBackdropClick
  }), import_react57.default.createElement(Component, _extends47({
    ref: elRef,
    className: c.base[state]
  }, attrs), children));
});
Popup.displayName = "Popup";
var Popup_default = Popup;

// node_modules/konsta/react/esm/components/Preloader.js
var import_react60 = __toESM(require_react(), 1);

// node_modules/konsta/react/esm/components/icons/PreloaderIOS.js
var import_react58 = __toESM(require_react(), 1);
function _extends48() {
  _extends48 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends48.apply(this, arguments);
}
var PreloaderIOS = (props) => {
  return import_react58.default.createElement("svg", _extends48({
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "currentcolor"
  }, props), import_react58.default.createElement("path", {
    d: "M10,0 C10.5522847,0 11,0.44771525 11,1 L11,6 C11,6.55228475 10.5522847,7 10,7 C9.44771525,7 9,6.55228475 9,6 L9,1 C9,0.44771525 9.44771525,0 10,0 Z"
  }), import_react58.default.createElement("path", {
    d: "M10,13 C10.5522847,13 11,13.4477153 11,14 L11,19 C11,19.5522847 10.5522847,20 10,20 C9.44771525,20 9,19.5522847 9,19 L9,14 C9,13.4477153 9.44771525,13 10,13 Z",
    opacity: ".64"
  }), import_react58.default.createElement("path", {
    d: "M13,10 C13,9.44771525 13.4477153,9 14,9 L19,9 C19.5522847,9 20,9.44771525 20,10 C20,10.5522847 19.5522847,11 19,11 L14,11 C13.4477153,11 13,10.5522847 13,10 Z",
    opacity: ".82"
  }), import_react58.default.createElement("path", {
    d: "M-3.8285687e-16,10 C-3.8285687e-16,9.44771525 0.44771525,9 1,9 L6,9 C6.55228475,9 7,9.44771525 7,10 C7,10.5522847 6.55228475,11 6,11 L1,11 C0.44771525,11 -3.8285687e-16,10.5522847 -3.8285687e-16,10 Z",
    opacity: ".46"
  }), import_react58.default.createElement("path", {
    d: "M2.92912627,2.92912627 C3.31965056,2.53860197 3.95281554,2.53860197 4.34333983,2.92912627 L7.87887373,6.46466017 C8.26939803,6.85518446 8.26939803,7.48834944 7.87887373,7.87887373 C7.48834944,8.26939803 6.85518446,8.26939803 6.46466017,7.87887373 L2.92912627,4.34333983 C2.53860197,3.95281554 2.53860197,3.31965056 2.92912627,2.92912627 Z",
    opacity: ".37"
  }), import_react58.default.createElement("path", {
    d: "M12.1211263,12.1211263 C12.5116506,11.730602 13.1448155,11.730602 13.5353398,12.1211263 L17.0708737,15.6566602 C17.461398,16.0471845 17.461398,16.6803494 17.0708737,17.0708737 C16.6803494,17.461398 16.0471845,17.461398 15.6566602,17.0708737 L12.1211263,13.5353398 C11.730602,13.1448155 11.730602,12.5116506 12.1211263,12.1211263 Z",
    opacity: ".73"
  }), import_react58.default.createElement("path", {
    d: "M12.1211263,7.87887373 C11.730602,7.48834944 11.730602,6.85518446 12.1211263,6.46466017 L15.6566602,2.92912627 C16.0471845,2.53860197 16.6803494,2.53860197 17.0708737,2.92912627 C17.461398,3.31965056 17.461398,3.95281554 17.0708737,4.34333983 L13.5353398,7.87887373 C13.1448155,8.26939803 12.5116506,8.26939803 12.1211263,7.87887373 Z",
    opacity: ".91"
  }), import_react58.default.createElement("path", {
    d: "M2.92912627,17.0708737 C2.53860197,16.6803494 2.53860197,16.0471845 2.92912627,15.6566602 L6.46466017,12.1211263 C6.85518446,11.730602 7.48834944,11.730602 7.87887373,12.1211263 C8.26939803,12.5116506 8.26939803,13.1448155 7.87887373,13.5353398 L4.34333983,17.0708737 C3.95281554,17.461398 3.31965056,17.461398 2.92912627,17.0708737 Z",
    opacity: ".55"
  }));
};
var PreloaderIOS_default = PreloaderIOS;

// node_modules/konsta/react/esm/components/icons/PreloaderMaterial.js
var import_react59 = __toESM(require_react(), 1);
function _extends49() {
  _extends49 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends49.apply(this, arguments);
}
var PreloaderMaterial = (props) => {
  return import_react59.default.createElement("svg", _extends49({
    viewBox: "0 0 36 36"
  }, props, {
    fill: "none",
    stroke: "currentcolor"
  }), import_react59.default.createElement("circle", {
    cx: "18",
    cy: "18",
    r: "16"
  }));
};
var PreloaderMaterial_default = PreloaderMaterial;

// node_modules/konsta/shared/esm/classes/PreloaderClasses.js
var PreloaderClasses = (props, colors, theme) => {
  const {
    size
  } = props;
  return {
    base: {
      common: cls(theme === "ios" ? "k-ios-preloader" : "k-material-preloader", `inline-block ${size}`),
      ios: colors.iconIos,
      material: `stroke-4 ${colors.iconMaterial}`
    },
    inner: {
      common: `block w-full h-full`
    }
  };
};

// node_modules/konsta/shared/esm/colors/PreloaderColors.js
var PreloaderColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    iconIos: "text-primary",
    iconMaterial: cls("text-md-light-primary", dark("dark:text-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Preloader.js
function _extends50() {
  _extends50 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends50.apply(this, arguments);
}
var Preloader = (0, import_react60.forwardRef)((props, ref) => {
  const {
    component = "span",
    className,
    colors: colorsProp,
    size = "w-8 h-8",
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react60.useRef)(null);
  (0, import_react60.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = PreloaderColors(colorsProp, dark);
  const SVGComponent = theme === "ios" ? PreloaderIOS_default : PreloaderMaterial_default;
  const c = themeClasses2(PreloaderClasses({
    ...props,
    size
  }, colors, theme), className);
  return import_react60.default.createElement(Component, _extends50({
    ref: elRef,
    className: c.base
  }, attrs), import_react60.default.createElement("span", {
    className: c.inner
  }, import_react60.default.createElement(SVGComponent, {
    className: "w-full h-full"
  })), children);
});
Preloader.displayName = "Preloader";
var Preloader_default = Preloader;

// node_modules/konsta/react/esm/components/Progressbar.js
var import_react61 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ProgressbarClasses.js
var ProgressbarClasses = (colors) => {
  return {
    base: {
      common: `block h-1 bg-opacity-30 dark:bg-opacity-30 overflow-hidden rtl:rotate-180`,
      ios: `bg-black rounded-full`,
      material: colors.bgMaterial
    },
    inner: {
      common: `block duration-200 w-full h-full`,
      ios: colors.bgIos,
      material: colors.bgMaterial
    }
  };
};

// node_modules/konsta/shared/esm/colors/ProgressbarColors.js
var ProgressbarColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: "bg-primary",
    bgMaterial: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Progressbar.js
function _extends51() {
  _extends51 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends51.apply(this, arguments);
}
var Progressbar = (0, import_react61.forwardRef)((props, ref) => {
  const {
    component = "span",
    className,
    colors: colorsProp,
    ios,
    material,
    progress = 0,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react61.useRef)(null);
  (0, import_react61.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = ProgressbarColors(colorsProp, dark);
  const c = themeClasses2(ProgressbarClasses(colors), className);
  return import_react61.default.createElement(Component, _extends51({
    ref: elRef,
    className: c.base
  }, attrs), import_react61.default.createElement("span", {
    className: c.inner,
    style: {
      transform: `translateX(-${100 - progress / 1 * 100}%)`
    }
  }), children);
});
Progressbar.displayName = "Progressbar";
var Progressbar_default = Progressbar;

// node_modules/konsta/react/esm/components/Radio.js
var import_react62 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/RadioClasses.js
var RadioClasses = (props, colors, classes, darkClasses) => {
  return {
    base: cls(`cursor-pointer inline-flex align-middle`, positionClass("relative", classes), darkClasses("dark:touch-ripple-white")),
    iconWrap: {
      common: "flex items-center justify-center rounded-full",
      ios: "w-5.5 h-5.5 border",
      material: "w-5 h-5 border-2",
      notChecked: {
        ios: colors.borderIos,
        material: colors.borderMaterial
      },
      checked: {
        ios: colors.borderCheckedIos,
        material: colors.borderCheckedMaterial
      }
    },
    icon: {
      ios: "text-primary",
      material: `w-3 h-3 rounded-full ${colors.bgCheckedMaterial}`,
      notChecked: "opacity-0",
      checked: "opacity-100"
    },
    indeterminateIcon: {
      common: "bg-white w-3/4",
      ios: "h-0.25",
      material: "h-0.5"
    },
    input: {
      common: "sr-only"
    }
  };
};

// node_modules/konsta/shared/esm/colors/RadioColors.js
var RadioColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    borderIos: cls("border-black border-opacity-30", dark("dark:border-white dark:border-opacity-30")),
    borderMaterial: cls(`border-md-light-outline`, dark("dark:border-md-dark-outline")),
    bgCheckedIos: "bg-primary",
    bgCheckedMaterial: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary")),
    borderCheckedIos: "border-primary",
    borderCheckedMaterial: cls("border-md-light-primary", dark("dark:border-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Radio.js
function _extends52() {
  _extends52 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends52.apply(this, arguments);
}
var Radio = (0, import_react62.forwardRef)((props, ref) => {
  const {
    component = "label",
    className,
    colors: colorsProp,
    defaultChecked,
    checked,
    name,
    value,
    disabled,
    readOnly,
    onChange,
    ios,
    material,
    touchRipple = true,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react62.useRef)(null);
  (0, import_react62.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  useTouchRipple(elRef, theme === "material" && touchRipple);
  const colors = RadioColors(colorsProp, dark);
  const state = checked || defaultChecked && !onChange ? "checked" : "notChecked";
  const c = themeClasses2(RadioClasses(props, colors, className, dark), className);
  return import_react62.default.createElement(Component, _extends52({
    ref: elRef,
    className: c.base
  }, attrs), import_react62.default.createElement("input", {
    type: "radio",
    name,
    value,
    disabled,
    readOnly,
    checked,
    defaultChecked,
    onChange,
    className: c.input
  }), import_react62.default.createElement("i", {
    className: c.iconWrap[state]
  }, theme === "ios" ? import_react62.default.createElement(CheckboxIcon_default, {
    className: c.icon[state]
  }) : import_react62.default.createElement("span", {
    className: c.icon[state]
  })), children);
});
Radio.displayName = "Radio";
var Radio_default = Radio;

// node_modules/konsta/react/esm/components/Range.js
var import_react63 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/RangeClasses.js
var RangeClasses = (props, colors, darkClasses) => {
  return {
    base: {
      common: "block relative select-none w-full self-center touch-pan-y",
      ios: "h-7",
      material: "h-5"
    },
    trackBg: {
      common: cls("absolute top-1/2 left-0 w-full transform -translate-y-1/2 bg-black bg-opacity-20", darkClasses("dark:bg-white dark:bg-opacity-20")),
      ios: "h-1 rounded-full",
      material: "h-0.5"
    },
    trackValue: {
      common: `absolute top-1/2 start-0 w-full transform -translate-y-1/2`,
      ios: `h-1 rounded-full ${colors.valueBgIos}`,
      material: `h-0.5 ${colors.valueBgMaterial}`
    },
    input: {
      common: "appearance-none w-full bg-transparent cursor-pointer block focus:outline-none relative",
      ios: "h-7",
      material: "h-5"
    },
    inputThumb: {
      common: "range-thumb:relative range-thumb:appearance-none range-thumb:rounded-full range-thumb:border-none",
      ios: `range-thumb:w-7 range-thumb:h-7 range-thumb:-mt-3.5 ${colors.thumbBgIos} range-thumb:shadow-ios-toggle`,
      material: `range-thumb:w-3 range-thumb:h-3 ${colors.thumbBgMaterial} range-thumb:-mt-1.5 range-thumb:transform range-thumb:duration-200 active:range-thumb:scale-150`
    },
    inputTrack: {
      common: "range-track:appearance-none range-track:h-px"
    }
  };
};

// node_modules/konsta/shared/esm/colors/RangeColors.js
var RangeColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    valueBgIos: "bg-primary",
    valueBgMaterial: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary")),
    thumbBgIos: "range-thumb:bg-white",
    thumbBgMaterial: cls("range-thumb:bg-md-light-primary", dark("dark:range-thumb:bg-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Range.js
function _extends53() {
  _extends53 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends53.apply(this, arguments);
}
var Range = (0, import_react63.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    ios,
    material,
    // Children
    children,
    inputId,
    name,
    value = void 0,
    defaultValue,
    readOnly,
    disabled,
    step = 1,
    min = 0,
    max = 100,
    onInput,
    onChange,
    onFocus,
    onBlur,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react63.useRef)(null);
  (0, import_react63.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = RangeColors(colorsProp, dark);
  const c = themeClasses2(RangeClasses(props, colors, dark), className);
  const valueWidth = ((value || 0) - min) / (max - min) * 100;
  return import_react63.default.createElement(Component, _extends53({
    ref: elRef,
    className: c.base
  }, attrs), import_react63.default.createElement("span", {
    className: c.trackBg
  }), import_react63.default.createElement("span", {
    className: c.trackValue,
    style: {
      width: `${valueWidth}%`
    }
  }), import_react63.default.createElement("input", {
    className: cls(c.input, c.inputThumb, c.inputTrack),
    type: "range",
    id: inputId,
    name,
    min,
    max,
    step,
    value,
    defaultValue,
    readOnly,
    disabled,
    onInput,
    onChange,
    onFocus,
    onBlur
  }));
});
Range.displayName = "Range";
var Range_default = Range;

// node_modules/konsta/react/esm/components/Searchbar.js
var import_react65 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/SearchbarClasses.js
var SearchbarClasses = (props, colors, _ref) => {
  let {
    isEnabled,
    darkClasses
  } = _ref;
  return {
    base: {
      common: "relative flex overflow-hidden items-center",
      ios: "px-2 w-full",
      material: "px-0 py-2 -mx-2 w-[calc(100%+32px)]"
    },
    inner: {
      common: "w-full shrink-1 relative",
      ios: "transition-all duration-300"
    },
    searchIconWrap: {
      common: "absolute inset-y-0 flex items-center z-40",
      ios: "start-2",
      material: "start-4"
    },
    clearButton: {
      common: "absolute justify-center inset-y-0 flex items-center z-40 cursor-pointer end-0",
      ios: "w-8 h-8",
      material: "w-12 h-12"
    },
    input: {
      common: "block appearance-none  w-full py-2  focus:outline-none z-30",
      ios: cls("h-8 bg-black/10 pl-7 pr-7 rounded-lg text-base", darkClasses("dark:placeholder-white dark:placeholder-opacity-30 dark:bg-white/10"), colors.placeholderIos, colors.inputBgIos),
      material: cls("h-12 ps-12 pe-4 rounded-full", colors.placeholderMaterial, colors.inputBgMaterial)
    },
    deleteIcon: {
      common: "",
      ios: "w-3.5 h-3.5 opacity-45",
      material: "w-6 h-6 active:opacity-20"
    },
    searchIcon: {
      common: "",
      ios: cls("w-4 h-4 opacity-45"),
      material: cls("w-5 h-5 z-30", isEnabled ? "opacity-0 transform rotate-90 scale-50 transition-transform-opacity  duration-400 " : "block transform transition-transform-opacity scale-100 rotate-0 duration-400")
    },
    cancelButton: {
      ios: cls("ps-2 flex items-center h-8 cursor-pointer bg-transparent text-primary shrink-0 z-40 transition-all duration-300 active:opacity-30", isEnabled ? "" : "opacity-0"),
      material: cls("absolute left-4 cursor-pointer", isEnabled ? "z-40 transform scale-100 rotate-0 transition-transform-opacity  duration-400" : "opacity-0 transform -rotate-90 scale-50 transition-transform-opacity duration-400")
    }
  };
};

// node_modules/konsta/shared/esm/colors/SearchbarColors.js
var SearchbarColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    inputBgIos: "",
    inputBgMaterial: cls("bg-md-light-secondary-container", dark("dark:bg-md-dark-secondary-container")),
    placeholderIos: "",
    placeholderMaterial: cls("placeholder-md-light-on-surface-variant", dark("dark:placeholder-md-dark-on-surface-variant")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/icons/SearchIcon.js
var import_react64 = __toESM(require_react(), 1);
function _extends54() {
  _extends54 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends54.apply(this, arguments);
}
var SearchIcon = (_ref) => {
  let {
    theme,
    ...rest
  } = _ref;
  return theme === "ios" ? import_react64.default.createElement("svg", _extends54({
    xmlns: "http://www.w3.org/2000/svg",
    width: "13",
    height: "13",
    viewBox: "0 0 56 56",
    fill: "currentcolor"
  }, rest), import_react64.default.createElement("path", {
    d: "M 23.9570 41.7695 C 27.8476 41.7695 31.4804 40.5039 34.4336 38.3945 L 45.5429 49.5039 C 46.0585 50.0195 46.7382 50.2774 47.4414 50.2774 C 48.9648 50.2774 50.0664 49.1055 50.0664 47.6055 C 50.0664 46.9023 49.8322 46.2461 49.3162 45.7305 L 38.2773 34.6679 C 40.5976 31.6211 41.9804 27.8476 41.9804 23.7461 C 41.9804 13.8320 33.8710 5.7226 23.9570 5.7226 C 14.0195 5.7226 5.9336 13.8320 5.9336 23.7461 C 5.9336 33.6601 14.0195 41.7695 23.9570 41.7695 Z M 23.9570 37.8789 C 16.1992 37.8789 9.8242 31.4805 9.8242 23.7461 C 9.8242 16.0117 16.1992 9.6133 23.9570 9.6133 C 31.6914 9.6133 38.0898 16.0117 38.0898 23.7461 C 38.0898 31.4805 31.6914 37.8789 23.9570 37.8789 Z"
  })) : import_react64.default.createElement("svg", _extends54({
    xmlns: "http://www.w3.org/2000/svg",
    width: "48",
    height: "48",
    viewBox: "0 0 56 56",
    fill: "currentcolor"
  }, rest), import_react64.default.createElement("path", {
    d: "M 23.9570 41.7695 C 27.8476 41.7695 31.4804 40.5039 34.4336 38.3945 L 45.5429 49.5039 C 46.0585 50.0195 46.7382 50.2774 47.4414 50.2774 C 48.9648 50.2774 50.0664 49.1055 50.0664 47.6055 C 50.0664 46.9023 49.8322 46.2461 49.3162 45.7305 L 38.2773 34.6679 C 40.5976 31.6211 41.9804 27.8476 41.9804 23.7461 C 41.9804 13.8320 33.8710 5.7226 23.9570 5.7226 C 14.0195 5.7226 5.9336 13.8320 5.9336 23.7461 C 5.9336 33.6601 14.0195 41.7695 23.9570 41.7695 Z M 23.9570 37.8789 C 16.1992 37.8789 9.8242 31.4805 9.8242 23.7461 C 9.8242 16.0117 16.1992 9.6133 23.9570 9.6133 C 31.6914 9.6133 38.0898 16.0117 38.0898 23.7461 C 38.0898 31.4805 31.6914 37.8789 23.9570 37.8789 Z"
  }));
};
var SearchIcon_default = SearchIcon;

// node_modules/konsta/react/esm/components/Searchbar.js
function _extends55() {
  _extends55 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends55.apply(this, arguments);
}
var Searchbar = (0, import_react65.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    placeholder = "Search",
    value,
    inputId,
    inputStyle,
    disableButton = false,
    disableButtonText = "Cancel",
    clearButton = true,
    onInput,
    onChange,
    onFocus,
    onBlur,
    onClear,
    onDisable,
    ios,
    material,
    // children,
    ...rest
  } = props;
  const searchElRef = (0, import_react65.useRef)(null);
  const elRef = (0, import_react65.useRef)(null);
  const disableButtonRef = (0, import_react65.useRef)(null);
  const [disableButtonWidth, setDisableButtonWidth] = (0, import_react65.useState)(0);
  const disableTimeout = (0, import_react65.useRef)(null);
  const allowTransition = (0, import_react65.useRef)(false);
  (0, import_react65.useImperativeHandle)(ref, () => ({
    el: elRef.current,
    searchEl: searchElRef.current
  }));
  const [isEnabled, setIsEnabled] = (0, import_react65.useState)(false);
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = SearchbarColors(colorsProp, dark);
  const handleInput = (e) => {
    if (onInput)
      onInput(e);
  };
  const handleChange = (e) => {
    if (onChange)
      onChange(e);
  };
  const handleFocus = (e) => {
    setIsEnabled(true);
    if (onFocus)
      onFocus(e);
  };
  const handleBlur = (e) => {
    if (onBlur)
      onBlur(e);
  };
  const onGlobalBlur = () => {
    if (!value) {
      disableTimeout.current = setTimeout(() => {
        setIsEnabled(false);
      });
    }
  };
  const onGlobalFocus = () => {
    clearTimeout(disableTimeout.current);
  };
  const handleDisableButton = (e) => {
    e.preventDefault();
    setIsEnabled(false);
    if (searchElRef.current) {
      searchElRef.current.blur();
    }
    if (onDisable)
      onDisable();
    if (onClear)
      onClear();
  };
  (0, import_react65.useEffect)(() => {
    if (disableButtonRef.current) {
      setDisableButtonWidth(disableButtonRef.current.offsetWidth);
    }
    requestAnimationFrame(() => {
      requestAnimationFrame(() => {
        allowTransition.current = true;
      });
    });
  }, []);
  const c = themeClasses2(SearchbarClasses({
    ...props
  }, colors, {
    isEnabled,
    darkClasses: dark
  }));
  const CancelButton = theme === "ios" ? import_react65.default.createElement("button", {
    type: "button",
    ref: disableButtonRef,
    style: {
      marginRight: isEnabled ? 0 : `-${disableButtonWidth}px`,
      transitionDuration: !allowTransition.current ? "0ms" : ""
    },
    className: c.cancelButton,
    onClick: handleDisableButton,
    onPointerDown: (e) => e.preventDefault()
  }, disableButtonText) : import_react65.default.createElement(BackIcon_default, {
    theme,
    onClick: handleDisableButton,
    className: cls(c.cancelButton),
    onPointerDown: (e) => e.preventDefault()
  });
  const Component = component;
  const attrs = {
    ...rest
  };
  return import_react65.default.createElement(Component, _extends55({
    ref: elRef,
    className: c.base
  }, attrs, {
    onBlurCapture: onGlobalBlur,
    onFocusCapture: onGlobalFocus
  }), import_react65.default.createElement("div", {
    className: c.inner
  }, import_react65.default.createElement("span", {
    className: c.searchIconWrap
  }, import_react65.default.createElement(SearchIcon_default, {
    ios,
    material,
    className: c.searchIcon
  })), import_react65.default.createElement("input", {
    id: inputId,
    ref: searchElRef,
    className: cls(c.input),
    style: inputStyle,
    type: "text",
    name: "search",
    placeholder,
    value,
    onInput: handleInput,
    onChange: handleChange,
    onFocus: handleFocus,
    onBlur: handleBlur
  }), value && clearButton && import_react65.default.createElement("button", {
    className: c.clearButton,
    onClick: onClear,
    type: "button"
  }, import_react65.default.createElement(DeleteIcon_default, {
    theme,
    className: c.deleteIcon
  }))), disableButton && CancelButton);
});
Searchbar.displayName = "Searchbar";
var Searchbar_default = Searchbar;

// node_modules/konsta/react/esm/components/Segmented.js
var import_react66 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/SegmentedClasses.js
var SegmentedClasses = (props, colors, darkClasses) => {
  const {
    outline,
    rounded
  } = props;
  return {
    base: {
      common: `flex justify-center items-center overflow-hidden w-full`,
      square: {
        ios: "rounded",
        material: "rounded-lg"
      },
      rounded: "rounded-full"
    },
    raised: outline ? "shadow" : `shadow divide-x divide-black divide-opacity-10 rtl:divide-x-reverse`,
    outline: {
      common: ``,
      ios: `${colors.borderIos} border-2`,
      material: `${colors.borderMaterial} border`
    },
    outlineInner: {
      common: `-m-0.5 flex w-full justify-center items-center rtl:divide-x-reverse`,
      ios: `divide-x-2 ${colors.divideIos}`,
      material: `divide-x ${colors.divideMaterial}`
    },
    strong: {
      common: cls("p-0.5 space-x-1 relative"),
      ios: colors.strongBgIos,
      material: colors.strongBgMaterial
    },
    strongHighlight: {
      common: cls("absolute start-0.5 top-0.5 bottom-0.5 !ms-0 pointer-events-none duration-200", rounded && "rounded-full", `bg-white shadow`, darkClasses("dark:bg-opacity-15 dark:touch-ripple-white")),
      ios: cls(!rounded && "rounded"),
      material: cls(!rounded && "rounded-md")
    }
  };
};

// node_modules/konsta/shared/esm/colors/SegmentedColors.js
var SegmentedColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    strongBgIos: cls("bg-black bg-opacity-5", dark("dark:bg-white dark:bg-opacity-10")),
    strongBgMaterial: cls("bg-md-light-surface-variant", dark("dark:bg-md-dark-surface-variant")),
    borderIos: "border-primary",
    borderMaterial: cls("border-md-light-outline", dark("dark:border-md-dark-outline")),
    divideIos: "divide-primary",
    divideMaterial: cls("divide-md-light-outline", dark("dark:divide-md-dark-outline")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Segmented.js
function _extends56() {
  _extends56 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends56.apply(this, arguments);
}
var Segmented = (0, import_react66.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    ios,
    material,
    // Style props
    raised,
    outline,
    strong,
    rounded,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react66.useRef)(null);
  const highlightElRef = (0, import_react66.useRef)(null);
  (0, import_react66.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const [highlightStyle, setHighlightStyle] = (0, import_react66.useState)({
    transform: "",
    width: ""
  });
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = SegmentedColors(colorsProp, dark);
  const c = themeClasses2(SegmentedClasses(props, colors, dark));
  const classes = cls(
    // base
    rounded ? c.base.rounded : c.base.square,
    raised && c.raised,
    outline && c.outline,
    strong && c.strong,
    className
  );
  (0, import_react66.useEffect)(() => {
    if (strong && highlightElRef.current) {
      const buttonsEl = highlightElRef.current.parentElement;
      const buttonsLength = buttonsEl.children.length - 1;
      const activeIndex = [...buttonsEl.children].indexOf(buttonsEl.querySelector(".k-segmented-strong-button-active"));
      const between = "4px";
      const padding = "2px";
      setHighlightStyle({
        ...highlightStyle,
        width: `calc((100% - ${padding} * 2 - ${between} * (${buttonsLength} - 1)) / ${buttonsLength})`,
        transform: `translateX(calc((${activeIndex} * 100% + ${activeIndex} * ${between}) * var(--k-rtl-reverse)))`
      });
    }
  }, [children]);
  return import_react66.default.createElement(Component, _extends56({
    ref: elRef,
    className: classes
  }, attrs), outline ? import_react66.default.createElement("span", {
    className: c.outlineInner
  }, children) : children, strong && import_react66.default.createElement("span", {
    ref: highlightElRef,
    className: c.strongHighlight,
    style: highlightStyle
  }));
});
Segmented.displayName = "Segmented";
var Segmented_default = Segmented;

// node_modules/konsta/react/esm/components/SegmentedButton.js
var import_react67 = __toESM(require_react(), 1);
function _extends57() {
  _extends57 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends57.apply(this, arguments);
}
var SegmentedButton = (0, import_react67.forwardRef)((props, ref) => {
  const {
    active,
    children,
    outline,
    strong,
    clear,
    rounded,
    ...rest
  } = props;
  const elRef = (0, import_react67.useRef)(null);
  (0, import_react67.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  return import_react67.default.createElement(Button_default, _extends57({
    ref: elRef,
    segmented: true,
    segmentedActive: active,
    segmentedStrong: strong,
    rounded: rounded && strong
  }, rest), children);
});
SegmentedButton.displayName = "SegmentedButton";
var SegmentedButton_default = SegmentedButton;

// node_modules/konsta/react/esm/components/Sheet.js
var import_react68 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/SheetClasses.js
var SheetClasses = (props, colors, classes) => {
  return {
    base: {
      common: cls("left-0 top-full transition-transform duration-400 z-40 overflow-hidden", positionClass("fixed", classes)),
      ios: "",
      material: `rounded-t-2xl ease-material-in ${colors.bgIos}`,
      opened: `-translate-y-full ${colors.bgMaterial}`,
      closed: ""
    },
    backdrop: {
      common: "fixed z-40 w-full h-full left-0 top-0 bg-black bg-opacity-50 duration-400",
      opened: "",
      closed: "opacity-0 pointer-events-none"
    }
  };
};

// node_modules/konsta/shared/esm/colors/SheetColors.js
var SheetColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("bg-white", dark("dark:bg-black")),
    bgMaterial: cls("bg-md-light-surface", dark("dark:bg-md-dark-surface")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Sheet.js
function _extends58() {
  _extends58 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends58.apply(this, arguments);
}
var Sheet = (0, import_react68.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    opened,
    backdrop = true,
    onBackdropClick,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react68.useRef)(null);
  (0, import_react68.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const state = opened ? "opened" : "closed";
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = SheetColors(colorsProp, dark);
  const c = themeClasses2(SheetClasses(props, colors, className), className);
  return import_react68.default.createElement(import_react68.default.Fragment, null, backdrop && import_react68.default.createElement("div", {
    className: c.backdrop[state],
    onClick: onBackdropClick
  }), import_react68.default.createElement(Component, _extends58({
    ref: elRef,
    className: c.base[state]
  }, attrs), children));
});
Sheet.displayName = "Sheet";
var Sheet_default = Sheet;

// node_modules/konsta/react/esm/components/Stepper.js
var import_react69 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/StepperClasses.js
var StepperClasses = (props, colors) => {
  const {
    buttonsOnly
  } = props;
  return {
    base: `${colors.text} inline-flex items-stretch`,
    raised: "shadow",
    size: {
      small: {
        ios: `h-6`,
        material: `h-8`
      },
      medium: {
        ios: `h-7`,
        material: `h-10`
      },
      large: {
        ios: `h-11`,
        material: `h-12`
      }
    },
    shape: {
      square: {
        ios: "rounded",
        material: "rounded-lg"
      },
      rounded: "rounded-full"
    },
    button: {
      common: "relative flex items-center justify-center w-10 cursor-pointer overflow-hidden z-10 select-none"
    },
    buttonLeftShape: {
      square: {
        ios: "rounded-s",
        material: "rounded-s-lg"
      },
      rounded: "rounded-s-full"
    },
    buttonRightShape: {
      square: {
        ios: "rounded-e",
        material: "rounded-e-lg"
      },
      rounded: "rounded-e-full"
    },
    buttonStyle: {
      fill: {
        common: cls(colors.fillTouchRipple, buttonsOnly && "first:border-r border-black border-opacity-10 rtl:first:border-l rtl:first:border-r-0"),
        ios: cls(colors.fillBgIos, colors.fillTextIos, colors.fillActiveBgIos),
        material: cls(colors.fillBgMaterial, colors.fillTextMaterial, colors.fillActiveBgMaterial)
      },
      outline: {
        common: cls(colors.touchRipple, "active:bg-opacity-15", buttonsOnly && "first:border-r-0 rtl:last:border-r-0"),
        ios: cls("border-2", colors.textIos, colors.activeBgIos, colors.outlineBorderIos, buttonsOnly && "rtl:first:border-r-2"),
        material: cls("border", colors.textMaterial, colors.activeBgMaterial, colors.outlineBorderMaterial, buttonsOnly && "rtl:first:border-r")
      },
      clear: {
        common: `${colors.touchRipple} active:bg-opacity-15 last:border-l rtl:last:border-l-0 rtl:first:border-l border-black border-opacity-10`,
        ios: cls(colors.textIos, colors.activeBgIos),
        material: cls(colors.textMaterial, colors.activeBgMaterial)
      }
    },
    input: {
      common: "focus:outline-none text-center appearance-none bg-transparent"
    },
    value: {
      common: `w-11 flex items-center justify-center font-medium`,
      ios: `text-base ${colors.textIos}`,
      material: `text-sm ${colors.textMaterial}`,
      fill: {
        common: ``,
        ios: `border-t-2 border-b-2 ${colors.outlineBorderIos}`,
        material: `border-t border-b ${colors.outlineBorderMaterial}`
      },
      outline: {
        common: ``,
        ios: `border-t-2 border-b-2 ${colors.outlineBorderIos}`,
        material: `border-t border-b ${colors.outlineBorderMaterial}`
      },
      clear: "border-l border-black border-opacity-10"
    },
    hBar: "w-4 h-0.5 bg-current block",
    vBar: "w-0.5 h-4 bg-current block absolute inset-1/2 transform -translate-x-1/2 rtl:translate-x-1/2 -translate-y-1/2"
  };
};

// node_modules/konsta/shared/esm/colors/StepperColors.js
var StepperColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    activeBgIos: "active:bg-primary",
    activeBgMaterial: "",
    textIos: "text-primary",
    textMaterial: cls("text-md-light-primary", "dark:text-md-dark-primary"),
    fillTextIos: cls("text-white"),
    fillTextMaterial: cls("text-md-light-on-primary", dark("dark:text-md-dark-on-primary")),
    fillBgIos: "bg-primary",
    fillBgMaterial: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary")),
    fillActiveBgIos: "active:bg-ios-primary-shade",
    fillActiveBgMaterial: "",
    fillTouchRipple: cls("touch-ripple-white", "dark:touch-ripple-primary"),
    outlineBorderIos: "border-primary",
    outlineBorderMaterial: cls("border-md-light-outline", dark("dark:border-md-dark-outline")),
    touchRipple: "touch-ripple-primary",
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Stepper.js
function _extends59() {
  _extends59 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends59.apply(this, arguments);
}
var Stepper = (0, import_react69.forwardRef)((props, ref) => {
  const {
    component = "span",
    className,
    colors: colorsProp,
    value = 0,
    defaultValue,
    input = false,
    inputType = "text",
    inputPlaceholder,
    inputDisabled,
    inputReadOnly,
    buttonsOnly,
    rounded,
    roundedIos,
    roundedMaterial,
    small,
    smallIos,
    smallMaterial,
    large,
    largeIos,
    largeMaterial,
    raised,
    raisedIos,
    raisedMaterial,
    outline,
    outlineIos,
    outlineMaterial,
    onInput,
    onChange,
    onFocus,
    onBlur,
    onMinus,
    onPlus,
    ios,
    material,
    touchRipple = true,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react69.useRef)(null);
  const buttonLeftElRef = (0, import_react69.useRef)(null);
  const buttonRightElRef = (0, import_react69.useRef)(null);
  (0, import_react69.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  useTouchRipple(buttonLeftElRef, theme === "material" && touchRipple);
  useTouchRipple(buttonRightElRef, theme === "material" && touchRipple);
  const isRounded = typeof rounded === "undefined" ? theme === "ios" ? roundedIos : roundedMaterial : rounded;
  const isSmall = typeof small === "undefined" ? theme === "ios" ? smallIos : smallMaterial : small;
  const isLarge = typeof large === "undefined" ? theme === "ios" ? largeIos : largeMaterial : large;
  const isRaised = typeof raised === "undefined" ? theme === "ios" ? raisedIos : raisedMaterial : raised;
  const isOutline = typeof outline === "undefined" ? theme === "ios" ? outlineIos : outlineMaterial : outline;
  const dark = useDarkClasses();
  const colors = StepperColors(colorsProp, dark);
  const size = isLarge ? "large" : isSmall ? "small" : "medium";
  const style = isOutline && isRaised ? "clear" : isOutline ? "outline" : "fill";
  const shape = isRounded ? "rounded" : "square";
  const c = themeClasses2(StepperClasses({
    ...props,
    rounded: isRounded,
    small: isSmall,
    large: isLarge,
    raised: isRaised,
    outline: isOutline
  }, colors));
  const attrs = {
    ...rest
  };
  const classes = cls(c.base, isRaised && c.raised, c.size[size], c.shape[shape], className);
  const buttonLeftClasses = cls(c.button, c.buttonStyle[style], c.buttonLeftShape[shape]);
  const buttonRightClasses = cls(c.button, c.buttonStyle[style], c.buttonRightShape[shape]);
  const valueClasses = cls(input && c.input, c.value[style]);
  return import_react69.default.createElement(Component, _extends59({
    ref: elRef,
    className: classes
  }, attrs), import_react69.default.createElement("span", {
    ref: buttonLeftElRef,
    className: buttonLeftClasses,
    role: "button",
    tabIndex: "0",
    onClick: onMinus
  }, import_react69.default.createElement("span", {
    className: c.hBar
  })), input && !buttonsOnly && import_react69.default.createElement("input", {
    className: valueClasses,
    placeholder: inputPlaceholder,
    type: inputType,
    value,
    defaultValue,
    disabled: inputDisabled,
    readOnly: inputReadOnly,
    onInput,
    onChange,
    onFocus,
    onBlur
  }), !input && !buttonsOnly && import_react69.default.createElement("span", {
    className: valueClasses
  }, value), import_react69.default.createElement("span", {
    ref: buttonRightElRef,
    className: buttonRightClasses,
    role: "button",
    tabIndex: "0",
    onClick: onPlus
  }, import_react69.default.createElement("span", {
    className: c.hBar
  }), import_react69.default.createElement("span", {
    className: c.vBar
  })));
});
Stepper.displayName = "Stepper";
var Stepper_default = Stepper;

// node_modules/konsta/react/esm/components/Tabbar.js
var import_react70 = __toESM(require_react(), 1);
function _extends60() {
  _extends60 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends60.apply(this, arguments);
}
var Tabbar = (0, import_react70.forwardRef)((props, ref) => {
  const {
    labels,
    icons,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react70.useRef)(null);
  (0, import_react70.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const attrs = {
    ...rest
  };
  return import_react70.default.createElement(Toolbar_default, _extends60({
    ref: elRef,
    tabbar: true,
    tabbarIcons: icons,
    tabbarLabels: labels
  }, attrs), children);
});
Tabbar.displayName = "Tabbar";
var Tabbar_default = Tabbar;

// node_modules/konsta/react/esm/components/TabbarLink.js
var import_react71 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/TabbarLinkClasses.js
var TabbarLinkClasses = function(_temp, colors) {
  let {
    hasIcon,
    hasLabel,
    active
  } = _temp === void 0 ? {} : _temp;
  if (colors === void 0) {
    colors = {};
  }
  return {
    content: {
      common: "flex flex-col items-center justify-center h-full",
      ios: cls("py-1", active ? colors.textActiveIos : colors.textIos),
      material: cls("py-2", hasIcon && hasLabel && "space-y-1", active ? colors.textActiveMaterial : colors.textMaterial)
    },
    iconContainer: {
      common: "flex items-center justify-center k-tabbar-link-icon relative",
      ios: cls("w-7 h-7"),
      material: cls("w-16 h-8 rounded-full")
    },
    iconBg: {
      common: "absolute left-0 top-0 w-full h-full rounded-full duration-200 -z-10 pointer-events-none",
      ios: cls(active ? colors.iconBgActiveIos : colors.iconBgIos),
      material: cls(active ? colors.iconBgActiveMaterial : colors.iconBgMaterial, !active && "scale-x-[0.5] opacity-0")
    },
    label: {
      ios: cls(hasIcon ? "text-xs font-medium" : "", ""),
      material: cls(hasIcon ? "text-xs" : "text-sm", "font-medium")
    }
  };
};

// node_modules/konsta/shared/esm/colors/TabbarLinkColors.js
var TabbarLinkColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    textIos: cls("text-black text-opacity-40", dark("dark:text-white dark:text-opacity-55")),
    textActiveIos: "text-primary",
    textMaterial: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    textActiveMaterial: cls("text-md-light-on-secondary-container", dark("dark:text-md-dark-on-secondary-container")),
    iconBgIos: "",
    iconBgActiveIos: "",
    iconBgMaterial: "",
    iconBgActiveMaterial: cls("bg-md-light-secondary-container", dark("dark:bg-md-dark-secondary-container")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/TabbarLink.js
function _extends61() {
  _extends61 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends61.apply(this, arguments);
}
var TabbarLink = (0, import_react71.forwardRef)((props, ref) => {
  const {
    className,
    active,
    ios,
    material,
    colors: colorsProp,
    linkProps = {},
    icon,
    label,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react71.useRef)(null);
  (0, import_react71.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const attrs = {
    ...linkProps,
    ...rest
  };
  const dark = useDarkClasses();
  const colors = TabbarLinkColors(colorsProp, dark);
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const hasIcon = !!icon;
  const hasLabel = label || children && children.length;
  const c = themeClasses2(TabbarLinkClasses({
    hasLabel,
    hasIcon,
    active
  }, colors));
  return import_react71.default.createElement(Link_default, _extends61({
    ref: elRef,
    tabbar: true,
    tabbarActive: active,
    className
  }, attrs), import_react71.default.createElement("span", {
    className: c.content
  }, icon && import_react71.default.createElement("span", {
    className: c.iconContainer
  }, import_react71.default.createElement("span", {
    className: c.iconBg
  }), icon), (label || children && children.length) && import_react71.default.createElement("span", {
    className: c.label
  }, label, children)));
});
TabbarLink.displayName = "TabbarLink";
var TabbarLink_default = TabbarLink;

// node_modules/konsta/react/esm/components/Table.js
var import_react72 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/TableClasses.js
var TableClasses = () => {
  return {
    base: {
      common: "w-full border-none p-0 m-0 border-collapse text-left table",
      ios: "",
      material: ``
    }
  };
};

// node_modules/konsta/react/esm/components/Table.js
function _extends62() {
  _extends62 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends62.apply(this, arguments);
}
var Table = (0, import_react72.forwardRef)((props, ref) => {
  const {
    className,
    ios,
    material,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react72.useRef)(null);
  (0, import_react72.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const c = themeClasses2(TableClasses({
    ...props
  }));
  const attrs = {
    ...rest
  };
  return import_react72.default.createElement("table", _extends62({
    className: c.base,
    ref: elRef
  }, attrs), children);
});
Table.displayName = "Table";
var Table_default = Table;

// node_modules/konsta/react/esm/components/TableBody.js
var import_react73 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/TableBodyClasses.js
var TableBodyClasses = () => {
  return {
    base: {
      common: "text-sm",
      ios: "",
      material: ``
    }
  };
};

// node_modules/konsta/react/esm/components/TableBody.js
function _extends63() {
  _extends63 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends63.apply(this, arguments);
}
var TableBody = (0, import_react73.forwardRef)((props, ref) => {
  const {
    className,
    ios,
    material,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react73.useRef)(null);
  (0, import_react73.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const c = themeClasses2(TableBodyClasses({
    ...props
  }));
  const attrs = {
    ...rest
  };
  return import_react73.default.createElement("tbody", _extends63({
    className: c.base,
    ref: elRef
  }, attrs), children);
});
TableBody.displayName = "TableBody";
var TableBody_default = TableBody;

// node_modules/konsta/react/esm/components/TableCell.js
var import_react74 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/TableCellClasses.js
var TableCellClasses = (props, colors, classes) => {
  const {
    header
  } = props;
  return {
    base: {
      common: cls("align-middle", classes),
      ios: cls(header ? `text-xs font-semibold overflow-hidden whitespace-nowrap leading-4 h-11 bg-transparent ${colors.textHeaderIos} py-0 px-4` : `h-11 relative py-0 px-4`),
      material: cls(header ? `${colors.textHeaderMaterial} px-6 py-0  text-xs font-medium overflow-hidden text-ellipsis whitespace-nowrap leading-4 h-14 bg-transparent` : `py-0 first:px-6 px-7 h-12`)
    }
  };
};

// node_modules/konsta/shared/esm/colors/TableCellColors.js
var TableCellColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    textHeaderIos: cls("text-black/45", dark("dark:text-white/55")),
    textHeaderMaterial: cls("text-md-light-on-surface-variant", dark("dark:text-md-dark-on-surface-variant")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/TableCell.js
function _extends64() {
  _extends64 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends64.apply(this, arguments);
}
var TableCell = (0, import_react74.forwardRef)((props, ref) => {
  const {
    className,
    colors: colorsProp,
    header,
    ios,
    material,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react74.useRef)(null);
  (0, import_react74.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = header ? "th" : "td";
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = TableCellColors(colorsProp, dark);
  const c = themeClasses2(TableCellClasses({
    ...props
  }, colors, className));
  const attrs = {
    ...rest
  };
  return import_react74.default.createElement(Component, _extends64({
    className: c.base,
    ref: elRef
  }, attrs), children);
});
TableCell.displayName = "TableCell";
var TableCell_default = TableCell;

// node_modules/konsta/react/esm/components/TableHead.js
var import_react75 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/TableHeadClasses.js
var TableHeadClasses = () => {
  return {
    base: {
      common: "align-middle relative",
      ios: "hairline-b",
      material: ""
    }
  };
};

// node_modules/konsta/react/esm/components/TableHead.js
function _extends65() {
  _extends65 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends65.apply(this, arguments);
}
var TableHead = (0, import_react75.forwardRef)((props, ref) => {
  const {
    className,
    ios,
    material,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react75.useRef)(null);
  (0, import_react75.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const c = themeClasses2(TableHeadClasses({
    ...props
  }));
  const attrs = {
    ...rest
  };
  return import_react75.default.createElement("thead", _extends65({
    className: c.base,
    ref: elRef
  }, attrs), children);
});
TableHead.displayName = "TableHead";
var TableHead_default = TableHead;

// node_modules/konsta/react/esm/components/TableRow.js
var import_react76 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/TableRowClasses.js
var TableRowClasses = (props, colors) => {
  const {
    header
  } = props;
  return {
    base: {
      common: "align-middle relative",
      ios: header ? "" : cls(colors.bgIos, "hairline-b last:hairline-transparent"),
      material: header ? "" : cls(colors.bgMaterial, `border-t ${colors.dividerMaterial}`)
    }
  };
};

// node_modules/konsta/shared/esm/colors/TableRowColors.js
var TableRowColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("hover:bg-black/5", dark("dark:hover:bg-white/10")),
    bgMaterial: cls("hover:bg-md-light-secondary-container", dark("dark:hover:bg-md-dark-secondary-container")),
    dividerMaterial: cls("border-md-light-outline", dark("dark:border-md-dark-outline")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/TableRow.js
function _extends66() {
  _extends66 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends66.apply(this, arguments);
}
var TableRow = (0, import_react76.forwardRef)((props, ref) => {
  const {
    className,
    colors: colorsProp,
    header,
    ios,
    material,
    children,
    ...rest
  } = props;
  const elRef = (0, import_react76.useRef)(null);
  (0, import_react76.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = TableRowColors(colorsProp, dark);
  const c = themeClasses2(TableRowClasses({
    ...props
  }, colors));
  const attrs = {
    ...rest
  };
  return import_react76.default.createElement("tr", _extends66({
    className: c.base,
    ref: elRef
  }, attrs), children);
});
TableRow.displayName = "TableRow";
var TableRow_default = TableRow;

// node_modules/konsta/react/esm/components/Toast.js
var import_react77 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ToastClasses.js
var ToastClasses = (props, colors, classes) => {
  const {
    translucent,
    opened
  } = props;
  return {
    base: {
      common: cls(positionClass("fixed", classes), "z-50 transform transition-transform-opacity w-full sm:w-auto start-0 bottom-0 sm:max-w-lg", !opened && "translate-y-full opacity-0 pointer-events-none"),
      ios: cls(`sm:rounded-lg duration-300`, colors.textIos, colors.bgIos, translucent && "translucent"),
      material: cls(`sm:rounded-2xl duration-200`, colors.textMaterial, colors.bgMaterial),
      left: "sm:start-4-safe sm:bottom-4-safe",
      right: "sm:end-4-safe sm:bottom-4-safe sm:start-auto",
      center: "sm:left-1/2 sm:bottom-4-safe sm:-translate-x-1/2"
    },
    content: {
      common: "flex items-center justify-between",
      ios: "pl-4-safe pr-4-safe pt-3 pb-3-safe sm:px-4 sm:py-3",
      material: "pl-6-safe pr-6-safe py-3.5 pb-3.5-safe sm:px-6 sm:py-3.5"
    },
    button: {
      common: "-my-2 shrink-0 ms-4",
      ios: "",
      material: "-me-2"
    }
  };
};

// node_modules/konsta/shared/esm/colors/ToastColors.js
var ToastColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: "bg-black",
    bgMaterial: cls("bg-md-light-surface-5", dark("dark:bg-md-dark-surface-5")),
    textIos: "text-white",
    textMaterial: cls("text-md-light-primary", dark("dark:text-md-dark-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Toast.js
function _extends67() {
  _extends67 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends67.apply(this, arguments);
}
var Toast = (0, import_react77.forwardRef)((props, ref) => {
  const {
    component = "div",
    className,
    colors: colorsProp,
    translucent = true,
    button,
    position = "left",
    opened,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react77.useRef)(null);
  (0, import_react77.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  const colors = ToastColors(colorsProp, dark);
  const c = themeClasses2(ToastClasses({
    ...props,
    translucent
  }, colors, className), className);
  return import_react77.default.createElement(Component, _extends67({
    ref: elRef,
    className: c.base[position]
  }, attrs), import_react77.default.createElement("div", {
    className: c.content
  }, children, button && import_react77.default.createElement("div", {
    className: c.button
  }, button)));
});
Toast.displayName = "Toast";
var Toast_default = Toast;

// node_modules/konsta/react/esm/components/Toggle.js
var import_react78 = __toESM(require_react(), 1);

// node_modules/konsta/shared/esm/classes/ToggleClasses.js
var ToggleClasses = (props, colors, classes, dark) => {
  return {
    base: {
      common: cls(positionClass("relative", classes), `cursor-pointer select-none inline-block align-middle relative duration-300 rounded-full group`, dark("dark:touch-ripple-white")),
      ios: "h-8 w-13 p-0.5",
      material: "w-13 h-8 border-2",
      notChecked: {
        ios: colors.bgIos,
        material: cls(colors.bgMaterial, colors.borderMaterial)
      },
      checked: {
        ios: `${colors.checkedBgIos}`,
        material: cls(colors.checkedBgMaterial, colors.checkedBorderMaterial)
      }
    },
    inner: {
      ios: cls("w-full h-full bg-white rounded-full block duration-300 transform", dark("dark:bg-opacity-0")),
      notChecked: {},
      checked: {
        ios: "scale-0"
      }
    },
    thumbWrap: {
      common: "rounded-full absolute duration-300 transform",
      ios: "w-7 h-7 start-0.5 top-0.5",
      material: "w-6 h-6 start-0.5 top-0.5",
      checked: {
        ios: cls("translate-x-5 rtl:!-translate-x-5"),
        material: cls(`translate-x-5 rtl:!-translate-x-5`)
      },
      notChecked: ""
    },
    thumb: {
      common: "w-full h-full rounded-full absolute duration-300 transform start-0 top-0",
      ios: "shadow-ios-toggle",
      material: "group-active:scale-[1.1]",
      checked: {
        ios: cls(colors.checkedThumbBgIos),
        material: cls(colors.checkedThumbBgMaterial)
      },
      notChecked: {
        ios: colors.thumbBgIos,
        material: cls("scale-[0.666]", colors.thumbBgMaterial)
      }
    },
    input: {
      common: "sr-only"
    }
  };
};

// node_modules/konsta/shared/esm/colors/ToggleColors.js
var ToggleColors = function(colorsProp, dark) {
  if (colorsProp === void 0) {
    colorsProp = {};
  }
  return {
    bgIos: cls("bg-black bg-opacity-10", dark("dark:bg-white dark:bg-opacity-20")),
    checkedBgIos: "bg-primary",
    thumbBgIos: "bg-white",
    checkedThumbBgIos: "bg-white",
    bgMaterial: cls("bg-md-light-surface-variant", dark("dark:bg-md-dark-surface-variant")),
    checkedBgMaterial: cls("bg-md-light-primary", dark("dark:bg-md-dark-primary")),
    borderMaterial: cls("border-md-light-outline", dark("dark:border-md-dark-outline")),
    checkedBorderMaterial: cls("border-md-light-primary", dark("dark:border-md-dark-primary")),
    thumbBgMaterial: cls("bg-md-light-outline", dark("dark:bg-md-dark-outline")),
    checkedThumbBgMaterial: cls("bg-md-light-on-primary", dark("dark:bg-md-dark-on-primary")),
    ...colorsProp
  };
};

// node_modules/konsta/react/esm/components/Toggle.js
function _extends68() {
  _extends68 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends68.apply(this, arguments);
}
var Toggle = (0, import_react78.forwardRef)((props, ref) => {
  const {
    component = "label",
    className,
    colors: colorsProp,
    defaultChecked,
    checked,
    name,
    value,
    disabled,
    readOnly,
    onChange,
    touchRipple = true,
    ios,
    material,
    // Children
    children,
    // Rest
    ...rest
  } = props;
  const elRef = (0, import_react78.useRef)(null);
  const rippleTargetElRef = (0, import_react78.useRef)(null);
  (0, import_react78.useImperativeHandle)(ref, () => ({
    el: elRef.current
  }));
  const Component = component;
  const attrs = {
    ...rest
  };
  const theme = useTheme({
    ios,
    material
  });
  const themeClasses2 = useThemeClasses({
    ios,
    material
  });
  const dark = useDarkClasses();
  useTouchRipple(rippleTargetElRef, theme === "material" && touchRipple, elRef);
  const colors = ToggleColors(colorsProp, dark);
  const state = checked || defaultChecked && !onChange ? "checked" : "notChecked";
  const c = themeClasses2(ToggleClasses(props, colors, className, dark), className);
  return import_react78.default.createElement(Component, _extends68({
    ref: elRef,
    className: c.base[state]
  }, attrs), import_react78.default.createElement("input", {
    type: "checkbox",
    name,
    value,
    disabled,
    readOnly,
    checked,
    defaultChecked,
    onChange,
    className: c.input
  }), import_react78.default.createElement("span", {
    className: c.inner[state]
  }), import_react78.default.createElement("span", {
    ref: rippleTargetElRef,
    className: c.thumbWrap[state]
  }, import_react78.default.createElement("span", {
    className: c.thumb[state]
  })), children);
});
Toggle.displayName = "Toggle";
var Toggle_default = Toggle;
export {
  Actions_default as Actions,
  ActionsButton_default as ActionsButton,
  ActionsGroup_default as ActionsGroup,
  ActionsLabel_default as ActionsLabel,
  App_default as App,
  Badge_default as Badge,
  Block_default as Block,
  BlockFooter_default as BlockFooter,
  BlockHeader_default as BlockHeader,
  BlockTitle_default as BlockTitle,
  Breadcrumbs_default as Breadcrumbs,
  BreadcrumbsCollapsed_default as BreadcrumbsCollapsed,
  BreadcrumbsItem_default as BreadcrumbsItem,
  BreadcrumbsSeparator_default as BreadcrumbsSeparator,
  Button_default as Button,
  Card_default as Card,
  Checkbox_default as Checkbox,
  Chip_default as Chip,
  Dialog_default as Dialog,
  DialogButton_default as DialogButton,
  Fab_default as Fab,
  Icon_default as Icon,
  KonstaProvider,
  Link_default as Link,
  List_default as List,
  ListButton_default as ListButton,
  ListGroup_default as ListGroup,
  ListInput_default as ListInput,
  ListItem_default as ListItem,
  MenuList_default as MenuList,
  MenuListItem_default as MenuListItem,
  Message_default as Message,
  Messagebar_default as Messagebar,
  Messages_default as Messages,
  MessagesTitle_default as MessagesTitle,
  Navbar_default as Navbar,
  NavbarBackLink_default as NavbarBackLink,
  Notification_default as Notification,
  Page_default as Page,
  Panel_default as Panel,
  Popover_default as Popover,
  Popup_default as Popup,
  Preloader_default as Preloader,
  Progressbar_default as Progressbar,
  Radio_default as Radio,
  Range_default as Range,
  Searchbar_default as Searchbar,
  Segmented_default as Segmented,
  SegmentedButton_default as SegmentedButton,
  Sheet_default as Sheet,
  Stepper_default as Stepper,
  Tabbar_default as Tabbar,
  TabbarLink_default as TabbarLink,
  Table_default as Table,
  TableBody_default as TableBody,
  TableCell_default as TableCell,
  TableHead_default as TableHead,
  TableRow_default as TableRow,
  Toast_default as Toast,
  Toggle_default as Toggle,
  Toolbar_default as Toolbar,
  useTheme,
  useThemeClasses
};
//# sourceMappingURL=konsta_react.js.map
